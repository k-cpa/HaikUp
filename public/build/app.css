/*!***************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[1]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[4].oneOf[1].use[2]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[3]!./assets/styles/app.scss ***!
  \***************************************************************************************************************************************************************************************************************************************************************************/
.header_mobile {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 9999;
  padding-top: 20px;
  padding-bottom: 20px;
}
.header_mobile .logo_wrapper {
  padding-left: 30px;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}
.header_mobile .logo_wrapper img {
  width: 50px;
  object-fit: cover;
}
.header_mobile .ham_wrapper {
  padding-right: 30px;
}
.header_mobile .ham_wrapper .ham_burger {
  height: 50px;
  cursor: pointer;
  background-color: transparent;
  width: 50px;
  margin-left: auto;
  position: relative;
}
.header_mobile .ham_wrapper .ham_burger span {
  height: 2px;
  z-index: 9999;
  width: 70%;
  background-color: #3B3B3B;
  border-radius: 25px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
.header_mobile .ham_wrapper .ham_burger span:not(:nth-child(2)) {
  transition: 0.3s ease;
}
.header_mobile .ham_wrapper .ham_burger span:nth-child(1) {
  top: 25%;
}
.header_mobile .ham_wrapper .ham_burger span:nth-child(3) {
  top: 75%;
}
.header_mobile .ham_wrapper .ham_burger.active span:nth-child(1) {
  top: 50%;
  transform: translate(-50%, -50%) rotate(45deg);
}
.header_mobile .ham_wrapper .ham_burger.active span:nth-child(2) {
  opacity: 0;
}
.header_mobile .ham_wrapper .ham_burger.active span:nth-child(3) {
  top: 50%;
  transform: translate(-50%, -50%) rotate(-45deg);
}
.header_mobile .off_screen_menu {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: fixed;
  background-color: #E3DACC;
  height: 100%;
  width: 100%;
  position: fixed;
  z-index: 9998;
  top: 0;
  right: -100%;
  text-align: center;
  font-size: 2rem;
  transition: 0.3s ease;
}
.header_mobile .off_screen_menu.active {
  right: 0;
}
.header_mobile .off_screen_menu nav {
  background-color: #E3DACC;
}
.header_mobile .off_screen_menu nav ul {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  background-color: #E3DACC;
  font-family: "DmSans";
  font-size: 32px;
}
.header_mobile .off_screen_menu nav .nav_links {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.header_mobile .off_screen_menu nav .nav_links a {
  color: #3B3B3B;
}
.header_mobile .off_screen_menu nav .nav_links .material-icons {
  background-color: #E3DACC;
  color: #3B3B3B;
  font-size: 35px;
}
.header_mobile .off_screen_menu nav .log_links {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  margin-top: 5rem;
  gap: 1.5rem;
}
.header_mobile .off_screen_menu nav .log_links a {
  color: #3B3B3B;
  padding: 5px 20px;
  border-radius: 3px;
  border: 1px solid #BABABA;
}
.header_mobile .off_screen_menu nav .log_links a.logout {
  background-color: #E6A9A4;
}
.header_mobile .off_screen_menu nav .log_links a.signup {
  background-color: #B9DAE6;
}
.header_mobile .off_screen_menu nav .log_links a.login {
  background-color: #FAF9F7;
}

.header_desktop {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background-color: #E3DACC;
  padding-top: 20px;
  padding-bottom: 20px;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 9999;
}
.header_desktop .logo_wrapper {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}
.header_desktop .logo_wrapper img {
  width: 150px;
  object-fit: cover;
}
.header_desktop .second_line {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  border-top: 1px solid #3B3B3B;
  padding-top: 20px;
  margin-top: 20px;
  position: relative;
  width: 100%;
  gap: 2rem;
}
.header_desktop .second_line nav {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  width: 100%;
  background-color: #E3DACC;
  font-family: "DmSans";
  font-size: 32px;
  width: 100%;
}
.header_desktop .second_line nav .nav_links {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  position: relative;
  width: 100%;
}
.header_desktop .second_line nav .nav_links li {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}
.header_desktop .second_line nav .nav_links li:not(:first-of-type) {
  padding-left: 60px;
}
.header_desktop .second_line nav .log_links {
  position: absolute;
  top: 35%;
  right: 30px;
}
.header_desktop .second_line nav .not_registered {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  width: 100%;
  gap: 20px;
}
.header_desktop .second_line nav .not_registered a {
  color: #3B3B3B;
  padding: 5px 20px;
  border-radius: 3px;
  border: 1px solid #BABABA;
}
.header_desktop .second_line nav .not_registered a.logout {
  background-color: #E6A9A4;
}
.header_desktop .second_line nav .not_registered a.signup {
  background-color: #B9DAE6;
}
.header_desktop .second_line nav .not_registered a.login {
  background-color: #FAF9F7;
}
.header_desktop .second_line nav .material-icons {
  background-color: #E3DACC;
  color: #3B3B3B;
  font-size: 35px;
  transition: 0.3s ease;
}
.header_desktop .second_line nav .material-icons.active {
  color: #B9DAE6;
  border-bottom: 2px solid #B9DAE6;
}
.header_desktop .second_line nav .material-icons:hover {
  color: #B9DAE6;
}

@media screen and (max-width: 768px) {
  .header_mobile {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
  }
  .header_desktop {
    display: none;
  }
}
* {
  margin: 0;
  padding: 0;
  text-decoration: none;
  list-style: none;
}

body {
  background-color: #FAF9F7;
}
body h1 {
  font-family: "TiemposMedium";
  font-size: 110px;
}
body h2 {
  font-size: 32px;
  font-weight: 300;
}
body p {
  color: #3B3B3B;
}

.max-w-site {
  max-width: 1440px;
}

.cta {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  padding-left: 20px;
  padding-right: 20px;
  height: 30px;
  background-color: #F0EEE6;
  border-radius: 3px;
  margin-bottom: 60px;
  box-shadow: -0.5px 1px 5px rgba(0, 0, 0, 0.2);
  border: 1px solid #BABABA;
  transition: 0.3s ease;
  cursor: pointer;
}
.cta:hover {
  background-color: #E3DACC;
  box-shadow: 0px 0px 0px rgba(0, 0, 0, 0.2);
}
.cta a {
  color: #3B3B3B;
  font-family: "DmSans";
  font-size: 16px;
}

.haiku {
  width: 783px;
  background-color: #E3DACC;
  border-radius: 3px;
  margin-bottom: 30px;
  padding: 10px;
  position: relative;
}
.haiku span {
  position: absolute;
  cursor: pointer;
  top: 12px;
  right: 12px;
  color: #3B3B3B;
}
.haiku .creator {
  padding-bottom: 12px;
  font-family: "DmSans";
}
.haiku .creator p {
  font-size: 20px;
}
.haiku .creator p a {
  color: #3B3B3B;
  transition: 0.3s ease;
}
.haiku .creator p a:hover {
  color: #BABABA;
}
.haiku .content {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  background-color: #FAF9F7;
  height: 100px;
  padding: 15px 0px 15px 20px;
  font-family: "TiemposRegular";
  border-radius: 3px;
  box-shadow: 0px 3px 5px rgba(0, 0, 0, 0.25);
}
.haiku .content p {
  font-size: 20px;
}
.haiku .like-comments_container {
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  align-items: center;
  margin-top: 20px;
}
.haiku .like-comments_container .comments {
  padding-right: 15px;
}
.haiku .like-comments_container .like {
  padding-right: 2px;
}
.haiku .like-comments_container .nbr_likes {
  font-family: "DmSans";
}
.haiku .like-comments_container .nbr_likes p {
  font-size: 14px;
}

.like-button, .comment-button {
  all: unset;
}

.like-icon {
  cursor: pointer;
  color: #3B3B3B;
}

.comment-icon {
  cursor: pointer;
}

.comment-modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.4);
  display: none;
  align-items: center;
  justify-content: center;
  z-index: 1000;
}

.modal-content {
  background: white;
  padding: 2rem;
  border-radius: 8px;
  max-width: 500px;
  width: 100%;
}

.close-button {
  cursor: pointer;
  float: right;
  font-size: 1.5rem;
}

.comments_container {
  background-color: red;
}

@media screen and (max-width: 768px) {
  body h1 {
    font-size: 70px;
  }
}
@media screen and (max-width: 550px) {
  body h1 {
    font-size: 3rem;
  }
}
footer {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
  background-color: #E3DACC;
}
footer .container {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
  margin-top: 50px;
  margin-bottom: 50px;
  gap: 174px;
}
footer .logo_wrapper {
  width: 150px;
  padding-left: 60px;
}
footer .logo_wrapper img {
  object-fit: cover;
  width: 100%;
}
footer .footer_nav {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}
footer .footer_nav nav {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  gap: 20px;
  font-family: "DmSans";
}
footer .footer_nav nav a {
  color: #3B3B3B;
  font-size: 14px;
  transition: 0.3s ease;
}
footer .footer_nav nav a:hover {
  text-decoration: underline;
}

@media screen and (max-width: 768px) {
  footer {
    justify-content: center;
  }
  footer .container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 60px;
  }
  footer .logo_wrapper {
    padding-left: 0px;
  }
  footer .footer_nav nav {
    align-items: center;
  }
}
@font-face {
  font-family: "TiemposRegular";
  src: url(/build/fonts/TiemposFine-Regular.f5f04066.woff2);
  font-weight: 200;
  font-style: normal;
}
@font-face {
  font-family: "TiemposMedium";
  src: url(/build/fonts/TiemposFine-Medium.5179bcd9.woff2);
  font-weight: 800;
  font-style: normal;
}
@font-face {
  font-family: "DmSans";
  src: url(/build/fonts/DMSans-VariableFont_opsz,wght.b230ddb7.ttf);
  font-style: normal;
}
.hero_container {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  width: 100%;
}
.hero_container .hero {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  width: 100%;
  height: 250px;
}
.hero_container .hero .title {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 100%;
}
.hero_container .hero .title h1 {
  transform: translateX(-55%);
  margin-bottom: -15px;
}
.hero_container .hero .title h3 {
  padding-left: 100px;
  font-size: 24px;
  font-weight: 300;
}

section {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 100%;
}
section .title {
  padding-top: 60px;
  align-self: flex-start;
  width: 100%;
  margin-bottom: 22px;
  font-family: "DmSans";
}
section .title_concept {
  font-family: "DmSans";
  align-self: flex-start;
  padding-left: 30px;
  margin-bottom: 10px;
}
section .text_concept {
  font-family: "DmSans";
}
section .text_concept p {
  font-family: "DmSans";
  font-size: 20px;
  font-weight: 300;
}
section .text_concept p span {
  font-family: "TiemposRegular";
  font-size: 20px;
}
section .swiper-parent {
  width: 100%;
  max-width: 1440px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
section .swiper-parent .swiper-container {
  width: 100%;
  position: relative;
  padding-bottom: 40px;
  overflow: hidden;
}
section .swiper-wrapper {
  display: flex;
  width: full;
}
section .swiper-slide {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}
section .swiper-slide-content {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: justify;
  padding: 20px;
  max-width: 400px;
  margin-left: 10px;
  margin-right: 10px;
  height: 550px;
  background-color: #E3DACC;
  border-radius: 5px;
  box-sizing: border-box;
  gap: 1em;
}
section .swiper-slide-content .title_content {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  gap: 20px;
}
section .swiper-slide-content .title_card {
  align-self: flex-start;
  font-family: "DmSans";
  font-weight: 700;
}
section .swiper-slide-content .title_card h3 {
  font-size: 24px;
}
section .swiper-slide-content .img_wrapper {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  height: 300px;
  width: 300px;
  position: relative;
  overflow: hidden;
  margin-bottom: 15px;
}
section .swiper-slide-content .img_wrapper img {
  display: block;
  height: 100%;
  opacity: 0.75;
  width: 100%;
  object-fit: cover;
}
section .swiper-pagination {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
}
section .swiper-pagination .swiper-pagination-bullet {
  background-color: #BABABA;
  width: 10px;
  height: 10px;
  opacity: 0.5;
}
section .swiper-pagination .swiper-pagination-bullet-active {
  background-color: #3B3B3B;
  opacity: 1;
}
section .cta {
  margin-top: 50px;
  align-self: center;
}

.background {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background-color: #F0EEE6;
  width: 100%;
}

.haiku_details .cta {
  background-color: #E3DACC;
}
.haiku_details .cta:hover {
  background-color: #F0EEE6;
}

.details_child {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding-right: 18px;
  padding-left: 18px;
  width: 90%;
  font-family: "DmSans";
  font-size: 20px;
  font-weight: 300;
  color: #3B3B3B;
  gap: 22px;
  margin-bottom: 4em;
}
.details_child .title_description {
  align-self: center;
  margin-top: 60px;
  margin-bottom: 40px;
}
.details_child span {
  font-family: "TiemposRegular";
}

.haiku_description {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.haiku_description .subtitle {
  align-self: flex-start;
  padding-bottom: 50px;
}
.haiku_description .subtitle .text {
  padding-top: 50px;
}
.haiku_description .description {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  gap: 50px;
}
.haiku_description .text {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  align-self: flex-start;
  padding-top: 20px;
  gap: 20px;
}
.haiku_description .text .text_haiku {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  padding-top: 20px;
  gap: 15px;
}
.haiku_description .text .text_haiku span {
  display: block;
}
.haiku_description .img_wrapper {
  width: 60%;
  height: 500px;
}
.haiku_description .img_wrapper img {
  width: 100%;
  height: 100%;
  opacity: 0.7;
  object-fit: cover;
  border-radius: 3px;
}

.history {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
}
.history .subtitle {
  padding-bottom: 50px;
}
.history .description {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
  width: 100%;
  gap: 50px;
}
.history .description .text {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  align-self: flex-start;
  padding-top: 20px;
  gap: 15px;
}
.history .description .text .text_haiku {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-end;
  padding-top: 20px;
  gap: 20px;
}
.history .description .text .text_haiku span {
  display: block;
}

.wordwide {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.wordwide .subtitle {
  align-self: flex-end;
}
.wordwide .description {
  display: flex;
  flex-direction: row-reverse;
  justify-content: center;
  align-items: center;
  width: 100%;
  gap: 50px;
}
.wordwide .description .text {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-end;
  text-align: right;
  align-self: flex-start;
  padding-top: 20px;
  gap: 15px;
}
.wordwide .description .text .text_haiku {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-end;
  padding-top: 20px;
  gap: 20px;
}
.wordwide .description .text .text_haiku span {
  display: block;
}
.wordwide .description .img_wrapper {
  width: 50%;
  height: 500px;
}
.wordwide .description .img_wrapper img {
  width: 100%;
  height: 100%;
  opacity: 0.6;
  object-fit: cover;
  border-radius: 3px;
}

.haikup {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.haikup .description {
  display: flex;
  flex-direction: row-reverse;
  justify-content: center;
  align-items: center;
  width: 100%;
  gap: 50px;
}
.haikup .description .text {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding-top: 20px;
  gap: 2rem;
}
.haikup .description .text .first_verse {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.haikup .description .text .haiku_text {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.haikup .description .text .haiku_text span {
  display: block;
}

@media screen and (max-width: 768px) {
  .details_child {
    gap: 0px;
  }
  .hero_container .hero .title h1 {
    margin-bottom: -5px;
  }
  section .swiper-slide-content {
    height: 600px;
  }
  .haiku_description {
    align-items: center;
  }
  .haiku_description .description {
    display: flex;
    flex-direction: column-reverse;
    justify-content: center;
    align-items: center;
  }
  .haiku_description .text {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    align-self: center;
    text-align: center;
    gap: 10px;
  }
  .haiku_description .img_wrapper {
    width: 90%;
    height: 250px;
  }
  .history .subtitle {
    padding-bottom: 20px;
  }
  .history .description {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }
  .history .description .text {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 10px;
    text-align: center;
  }
  .history .description .text .text_haiku {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-start;
    gap: 15px;
  }
  .wordwide .subtitle {
    padding-bottom: 20px;
    align-self: flex-start;
  }
  .wordwide .description {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }
  .wordwide .description .text {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
    gap: 10px;
  }
  .wordwide .description .text .text_haiku {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-start;
    gap: 15px;
  }
  .wordwide .description .img_wrapper {
    width: 90%;
    height: 250px;
  }
  .haikup {
    text-align: center;
  }
}
.login_signup {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  min-width: 100%;
  min-height: 70vh;
  background: #FAF9F7;
}
.login_signup .close_btn {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
  padding-left: 5%;
  width: 100%;
  margin-top: 50px;
}
.login_signup .close_btn a {
  padding-left: 43px;
  color: #1C1B1F;
  transition: transform 0.3s ease;
}
.login_signup .close_btn a:hover {
  transform: translateX(-4px);
}
.login_signup .element_container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 100%;
  margin-bottom: 58px;
  margin-top: 43px;
  gap: 3px;
}
.login_signup .element_container .title_form {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  font-family: "DmSans";
  text-align: center;
}
.login_signup .element_container .title_form h2 {
  font-size: 32px;
}
.login_signup form {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 100%;
}
.login_signup form .alert {
  margin-bottom: 2rem;
}
.login_signup form a {
  align-self: flex-end;
  padding-top: 3px;
  color: #3B3B3B;
  text-decoration: underline;
  font-size: 14px;
  margin-top: 6px;
  text-underline-offset: 2px;
  transition: 0.3s ease;
  cursor: pointer;
}
.login_signup form a:hover {
  color: #BABABA;
}
.login_signup form div {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  width: 280px;
  margin-bottom: 30px;
}
.login_signup form div:nth-child(3) {
  margin-bottom: 10px;
}
.login_signup form div input {
  all: unset;
  margin-top: 4px;
  border: 1px solid #BABABA;
  border-radius: 2px;
  box-shadow: inset 0px 2px 5px rgba(186, 186, 186, 0.35);
  width: 100%;
  padding-left: 5px;
  height: 32px;
  transition: 0.3s ease;
}
.login_signup form div input:focus {
  background-color: #F0EEE6;
}
.login_signup form div label, .login_signup form div ul, .login_signup form div p {
  align-self: flex-start;
}
.login_signup form div label {
  color: #3B3B3B;
  font-family: "TiemposRegular";
  font-size: 16px;
  display: block;
  margin-bottom: 2px;
}
.login_signup form div p {
  font-family: "DmSans";
  font-size: 14px;
  color: #3B3B3B;
}
.login_signup form div li {
  list-style-type: disc;
  margin-left: 1rem;
  color: #3B3B3B;
  font-size: 14px;
}
.login_signup form div:last-of-type {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  width: 106px;
  height: 30px;
  background-color: #F0EEE6;
  border-radius: 3px;
  box-shadow: -0.5px 1px 5px rgba(0, 0, 0, 0.2);
  border: 1px solid #BABABA;
  transition: 0.3s ease;
  cursor: pointer;
}
.login_signup form div:last-of-type:hover {
  background-color: #E3DACC;
  box-shadow: 0px 0px 0px rgba(0, 0, 0, 0.2);
}
.login_signup form div:last-of-type button {
  all: unset;
  color: #3B3B3B;
  font-family: "DmSans";
  font-size: 16px;
}
.login_signup .login_link {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  margin-top: 40px;
  margin-bottom: 40px;
  gap: 5px;
  color: #3B3B3B;
  font-size: 14px;
}
.login_signup .login_link a {
  color: #3B3B3B;
  text-decoration: underline;
  text-underline-offset: 2px;
  cursor: pointer;
  transition: 0.3s ease;
}
.login_signup .login_link a:hover {
  color: #BABABA;
}
.login_signup textarea {
  all: unset;
  margin-top: 4px;
  border: 1px solid #BABABA;
  border-radius: 2px;
  box-shadow: inset 0px 2px 5px rgba(186, 186, 186, 0.35);
  width: 1000px;
  height: 400px;
  padding-left: 5px;
  padding-top: 5px;
  font-family: "DmSans";
  transition: 0.3s ease;
  white-space: pre-wrap;
  word-wrap: break-word;
}
.login_signup textarea:focus {
  background-color: #F0EEE6;
}
.login_signup textarea::placeholder {
  text-align: center;
}
.login_signup .first_recup_password {
  padding-bottom: 0px !important;
}
.login_signup .second_recup_password {
  padding-bottom: 34px !important;
}
.login_signup .explication_form {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  width: 80%;
  text-align: center;
  font-family: "DmSans";
  font-size: 14px;
  margin-bottom: 8px;
}
.login_signup .words_container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  border: 1px solid #BABABA;
  padding: 15px;
  border-radius: 3px;
  gap: 5px;
  margin-bottom: 30px;
  color: #3B3B3B;
}
.login_signup .words_container .words_title {
  font-family: "DmSans";
  margin-bottom: 20px;
}
.login_signup .words_container .word {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 100%;
  gap: 10px;
}
.login_signup .words_container .word p {
  font-family: "TiemposMedium";
}

@media screen and (max-width: 1000px) {
  .login_signup textarea {
    width: 600px;
  }
}
@media screen and (max-width: 600px) {
  .login_signup textarea {
    width: 200px;
  }
}
.user_profile {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.user_profile .no_haikus {
  margin-bottom: 30px;
}
.user_profile .cta_description {
  padding-left: 10px;
  padding-right: 10px;
  line-height: 30px;
  margin-top: 50px;
  margin-bottom: 30px;
  height: 30px;
  background-color: #F0EEE6;
  border-radius: 3px;
  box-shadow: -0.5px 1px 5px rgba(0, 0, 0, 0.2);
  border: 1px solid #BABABA;
  transition: 0.3s ease;
  cursor: pointer;
}
.user_profile .cta_description:hover {
  background-color: #E3DACC;
  box-shadow: 0px 0px 0px rgba(0, 0, 0, 0.2);
}
.user_profile .cta_description a {
  color: #3B3B3B;
  font-family: "DmSans";
  font-size: 16px;
}
.user_profile .background_size {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  min-height: 95vh;
}
.user_profile .profile_hero {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  margin-bottom: 30px;
  width: 100%;
  padding-top: 90px;
}
.user_profile .profile_hero .follow {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-end;
  gap: 20px;
  align-self: flex-end;
  padding-right: 20px;
  font-family: "DmSans";
  padding-top: 30px;
}
.user_profile .profile_hero .follow button {
  all: unset;
  border: 1px solid #BABABA;
  border-radius: 3px;
  padding: 5px 10px;
  color: #3B3B3B;
  cursor: pointer;
  transition: 0.3s ease;
}
.user_profile .profile_hero .follow button:hover {
  background-color: #F0EEE6;
}
.user_profile .profile_hero .follow p {
  font-size: 14px;
  color: #BABABA;
}
.user_profile .profile_hero .title_profile {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  padding-left: 20px;
  width: 100%;
}
.user_profile .profile_hero .description {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
  gap: 15px;
  margin-top: 15px;
  margin-bottom: 10px;
  width: 60%;
  font-family: "DmSans";
}
.user_profile .profile_hero .description a {
  align-self: flex-start;
  margin-top: -20px;
  color: #3B3B3B;
  cursor: pointer;
}
.user_profile .user_haiku {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background-color: #E3DACC;
  min-width: 850px;
  position: relative;
  border-radius: 3px;
  margin-bottom: 50px;
}
.user_profile .user_haiku .title {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  font-family: "DmSans";
  margin-bottom: 20px;
}
.user_profile .user_haiku .title h2 {
  font-size: 32px;
  padding-left: 10px;
}
.user_profile .user_haiku .title p {
  font-size: 14px;
  color: #3B3B3B;
  padding-right: 10px;
}
.user_profile .user_haiku .haiku {
  justify-self: center;
  margin-bottom: 0px;
}
.user_profile .user_haiku .haiku:nth-child(3) {
  position: relative;
  z-index: 1;
}
.user_profile .user_haiku .haiku:nth-child(3)::before {
  position: absolute;
  pointer-events: none;
  content: "";
  inset: 10px;
  border-radius: inherit;
  z-index: 2;
  background: linear-gradient(to bottom, rgba(240, 238, 230, 0) 0%, rgba(240, 238, 230, 0.7) 100%);
}
.user_profile .user_haiku .haiku:nth-child(4) {
  position: relative;
  z-index: 1;
}
.user_profile .user_haiku .haiku:nth-child(4)::before {
  position: absolute;
  pointer-events: none;
  content: "";
  inset: 10px;
  border-radius: inherit;
  z-index: 2;
  background: linear-gradient(to bottom, rgba(240, 238, 230, 0.5) 0%, rgb(240, 238, 230) 100%);
}
.user_profile .user_haiku .cta {
  margin-bottom: 30px;
}
.user_profile .user_haiku .cta:hover {
  background-color: #FAF9F7;
}
.user_profile .user_likes {
  margin-bottom: 50px;
}
.user_profile .user_likes .title {
  font-family: "DmSans";
}
.user_profile .user_likes .title h2 {
  font-size: 32px;
  padding-left: 10px;
}

.notifications {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.notifications .notification_card {
  border: 1px solid #3B3B3B;
}

.feed {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: flex-start;
  min-height: 90vh;
}
.feed .background_size {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding-left: 10%;
  padding-right: 10%;
}
.feed .feed_title {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  align-self: flex-start;
  margin-top: 10em;
  margin-bottom: 60px;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLmNzcyIsIm1hcHBpbmdzIjoiOzs7QUFJQTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QUNISjtBREtJO0VBQ0k7RUVkSjtFQUNBLG1CQUZxQjtFQUdyQix1QkFIb0M7RUFJcEMsbUJBSm9EO0FEZ0J4RDtBREVRO0VBQ0k7RUFDQTtBQ0FaO0FET0s7RUFDRztBQ0xSO0FET1E7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QUNMWjtBRE9ZO0VBQ0k7RUFDQTtFQUNBO0VBQ0EseUJHbkNEO0VIb0NDO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QUNMaEI7QURTWTtFQUNJO0FDUGhCO0FEVVk7RUFDSTtBQ1JoQjtBRFdZO0VBQ0k7QUNUaEI7QURhZ0I7RUFDSTtFQUNBO0FDWHBCO0FEY2dCO0VBQ0k7QUNacEI7QURlZ0I7RUFDSTtFQUNBO0FDYnBCO0FEbUJJO0VFaEZBO0VBQ0Esc0JGZ0Z3QjtFRS9FeEIsdUJGK0VnQztFRTlFaEMsbUJGOEV3QztFQUNwQztFQUNBLHlCR2pGUTtFSGtGUjtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QUNkUjtBRGdCUTtFQUNJO0FDZFo7QURpQlE7RUFDSSx5QkdqR0k7QUZrRmhCO0FEaUJZO0VFckdSO0VBQ0Esc0JGcUdnQztFRXBHaEMsOEJGb0d3QztFRW5HeEMsbUJGbUd1RDtFQUMzQyx5QkdyR0E7RUhzR0EscUJHM0ZIO0VINEZHLGVHM0VIO0FGK0RiO0FEZ0JZO0VFN0dSO0VBQ0Esc0JGNkdnQztFRTVHaEMsdUJGNEd3QztFRTNHeEMsbUJGMkcrQztBQ1huRDtBRGFnQjtFQUNJLGNHM0dMO0FGZ0dmO0FEY2dCO0VBQ0kseUJHbkhKO0VIb0hJLGNHaEhMO0VIaUhLO0FDWnBCO0FEaUJZO0VFNUhSO0VBQ0Esc0JGNEg0QztFRTNINUMsdUJBSG9DO0VBSXBDLG1CQUpvRDtFRitIeEM7RUFDQTtBQ1poQjtBRGNnQjtFQUNJLGNHNUhMO0VINkhLO0VBQ0E7RUFDQTtBQ1pwQjtBRGVnQjtFQUNJLHlCR2pJUjtBRm9IWjtBRGdCZ0I7RUFDSSx5QkcxSUo7QUY0SGhCO0FEcUJnQjtFQUNJLHlCR3JKVjtBRmtJVjs7QUQwQkE7RUU1Skk7RUFDQSxzQkY0Sm9CO0VFM0pwQix1QkYySjRCO0VFMUo1QixtQkYwSm9DO0VBQ3BDLHlCRzVKWTtFSDZKWjtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBQ3BCSjtBRHNCSTtFRXZLQTtFQUNBLG1CQUZxQjtFQUdyQix1QkFIb0M7RUFJcEMsbUJBSm9EO0FEd0p4RDtBRG1CUTtFQUNJO0VBQ0E7QUNqQlo7QURxQkk7RUVoTEE7RUFDQSxtQkFGcUI7RUFHckIsdUJBSG9DO0VBSXBDLG1CQUpvRDtFRm1MaEQ7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FDaEJSO0FEa0JRO0VFekxKO0VBQ0EsbUJBRnFCO0VBR3JCLHVCQUhvQztFQUlwQyxtQkFKb0Q7RUY0TDVDO0VBQ0EseUJHMUxJO0VIMkxKLHFCR2hMQztFSGlMRCxlR2hLQztFSGlLRDtBQ2JaO0FEZVk7RUVqTVI7RUFDQSxtQkFGcUI7RUFHckIsdUJBSG9DO0VBSXBDLG1CQUpvRDtFRm9NeEM7RUFDQTtBQ1ZoQjtBRFlnQjtFRXRNWjtFQUNBLG1CQUZxQjtFQUdyQix1QkFIb0M7RUFJcEMsbUJBSm9EO0FEaU14RDtBRFNvQjtFQUNJO0FDUHhCO0FEV1k7RUFDSTtFQUNBO0VBQ0E7QUNUaEI7QURZWTtFRXBOUjtFQUNBLG1CQUZxQjtFQUdyQix1QkFIb0M7RUFJcEMsbUJBSm9EO0VGdU54QztFQUNBO0FDUGhCO0FEU2dCO0VBQ0ksY0dwTkw7RUhxTks7RUFDQTtFQUNBO0FDUHBCO0FEVWdCO0VBQ0kseUJHek5SO0FGaU5aO0FEV2dCO0VBQ0kseUJHbE9KO0FGeU5oQjtBRGdCZ0I7RUFDSSx5Qkc3T1Y7QUYrTlY7QURrQlk7RUFDSSx5QkdoUEE7RUhpUEEsY0c3T0Q7RUg4T0M7RUFDQTtBQ2hCaEI7QURrQmdCO0VBQ0ksY0dyUEo7RUhzUEk7QUNoQnBCO0FEa0JnQjtFQUNJLGNHelBKO0FGeU9oQjs7QUR1QkE7RUFDRTtJRXBRRTtJQUNBLG1CQUZxQjtJQUdyQiw4QkZtUThCO0lFbFE5QixtQkFKb0Q7RURxUHREO0VEb0JBO0lBQ0U7RUNsQkY7QUFDRjtBR3JQQTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0FIdVBKOztBR3BQQTtFQUNJLHlCRFhNO0FGa1FWO0FHclBJO0VBQ0ksNEJERlM7RUNHVCxnQkRhSztBRjBPYjtBR3BQSTtFQUNJLGVEV0s7RUNWTDtBSHNQUjtBR25QSTtFQUNJLGNEbEJPO0FGdVFmOztBR2pQQTtFQUNJO0FIb1BKOztBR2pQQTtFRmhDSTtFQUNBLG1CQUZxQjtFQUdyQix1QkFIb0M7RUFJcEMsbUJBSm9EO0VFbUNwRDtFQUNBO0VBQ0E7RUFDQSx5QkRwQ2E7RUNxQ2I7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FIdVBKO0FHclBJO0VBQ0kseUJENUNRO0VDNkNSO0FIdVBSO0FHcFBJO0VBQ0ksY0Q3Q087RUM4Q1AscUJEdkNLO0VDd0NMLGVEbEJTO0FGd1FqQjs7QUdsUEE7RUFDSTtFQUNBLHlCRHpEWTtFQzBEWjtFQUNBO0VBQ0E7RUFDQTtBSHFQSjtBR25QSTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0EsY0RoRU87QUZxVGY7QUdsUEk7RUFDSTtFQUNBLHFCRDlESztBRmtUYjtBR2xQUTtFQUNJLGVEN0NJO0FGaVNoQjtBR2xQWTtFQUNJLGNEM0VEO0VDNEVDO0FIb1BoQjtBR2xQZ0I7RUFDSSxjRGhGVDtBRm9VWDtBRzlPSTtFRjNGQTtFQUNBLHNCRTJGd0I7RUYxRnhCLHVCRTBGZ0M7RUZ6RmhDLHVCRXlGd0M7RUFDcEMseUJEN0ZFO0VDOEZGO0VBQ0E7RUFDQSw2QkRyRlU7RUNzRlY7RUFDQTtBSG1QUjtBR2pQUTtFQUNJLGVEcEVJO0FGdVRoQjtBRy9PSTtFRnpHQTtFQUNBLG1CQUZxQjtFQUdyQix5QkV3R2tDO0VGdkdsQyxtQkFKb0Q7RUU0R2hEO0FIb1BSO0FHbFBRO0VBQ0k7QUhvUFo7QUdsUFE7RUFDSTtBSG9QWjtBR2xQUTtFQUNJLHFCRHZHQztBRjJWYjtBR2xQWTtFQUNJLGVEckZBO0FGeVVoQjs7QUczT0E7RUFDSTtBSDhPSjs7QUczT0E7RUFDSTtFQUNBLGNEaElXO0FGOFdmOztBRzNPQTtFQUNJO0FIOE9KOztBRzFPQTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FINk9KOztBRzFPQTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QUg2T0o7O0FHMU9BO0VBQ0k7RUFDQTtFQUNBO0FINk9KOztBRzFPQTtFQUNJO0FINk9KOztBRzFPQTtFQUdRO0lBQ0ksZURoS0E7RUYyWVY7QUFDRjtBR3ZPQTtFQUlRO0lBQ0E7RUhzT047QUFDRjtBSWhhQTtFSEZJO0VBQ0EsbUJBRnFCO0VBR3JCLDJCR0M4QjtFSEE5QixtQkFKb0Q7RUdLcEQseUJGRlk7QUZ1YWhCO0FJbmFJO0VITkE7RUFDQSxtQkFGcUI7RUFHckIsMkJHS2tDO0VISmxDLG1CQUpvRDtFR1NoRDtFQUNBO0VBQ0E7QUp3YVI7QUlyYUk7RUFDSTtFQUNBO0FKdWFSO0FJcmFRO0VBQ0k7RUFDQTtBSnVhWjtBSW5hSTtFSHZCQTtFQUNBLG1CQUZxQjtFQUdyQix1QkFIb0M7RUFJcEMsbUJBSm9EO0FEaWN4RDtBSXRhUTtFSDFCSjtFQUNBLHNCRzBCNEI7RUh6QjVCLHVCR3lCb0M7RUh4QnBDLHVCR3dCNEM7RUFDcEM7RUFDQSxxQkZoQkM7QUYyYmI7QUl6YVk7RUFDSSxjRjFCRDtFRTJCQyxlRkNBO0VFQUE7QUoyYWhCO0FJemFnQjtFQUNJO0FKMmFwQjs7QUlwYUE7RUFDSTtJQUNJO0VKdWFOO0VJcmFNO0lIaERKO0lBQ0Esc0JHZ0Q0QjtJSC9DNUIsdUJHK0NvQztJSDlDcEMsbUJHOEM0QztJQUNwQztFSjBhVjtFSXZhTTtJQUNJO0VKeWFWO0VJcGFVO0lBQ0k7RUpzYWQ7QUFDRjtBS3BlQTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0FMc2VKO0FLbmVBO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7QUxxZUo7QUszZEE7RUFDSTtFQUNBO0VBQ0E7QUw2ZEo7QU0vZUE7RUxMSTtFQUNBLG1CQUZxQjtFQUdyQix1QkFIb0M7RUFJcEMsbUJBSm9EO0VLUXBEO0FOb2ZKO0FNbGZJO0VMVEE7RUFDQSxzQktTd0I7RUxSeEIsdUJLUWdDO0VMUGhDLHVCS093QztFQUNwQztFQUNBO0FOdWZSO0FNcmZRO0VMZEo7RUFDQSxzQktjNEI7RUxiNUIsdUJLYW9DO0VMWnBDLG1CS1k0QztFQUNwQztBTjBmWjtBTXhmWTtFQUVJO0VBQ0E7QU55ZmhCO0FNdGZZO0VBQ0k7RUFDQSxlSktIO0VJSkc7QU53ZmhCOztBTWhmQTtFTG5DSTtFQUNBLHNCS21Db0I7RUxsQ3BCLHVCS2tDNEI7RUxqQzVCLG1CS2lDb0M7RUFDcEM7QU5zZko7QU1wZkk7RUFFSTtFQUNBO0VBQ0E7RUFDQTtFQUNBLHFCSmhDSztBRnFoQmI7QU1sZkk7RUFDSSxxQkpwQ0s7RUlxQ0w7RUFDQTtFQUNBO0FOb2ZSO0FNaGZJO0VBQ0kscUJKNUNLO0FGOGhCYjtBTWhmUTtFQUNJLHFCSi9DQztFSWdERCxlSjVCSTtFSTZCSjtBTmtmWjtBTWhmWTtFQUNJLDZCSnRERTtFSXVERixlSmpDQTtBRm1oQmhCO0FNN2VJO0VBQ0k7RUFDQTtFTHpFSjtFQUNBLHNCS3lFb0M7RUx4RXBDLHVCQUhvQztFQUlwQyxtQkFKb0Q7QUQ2akJ4RDtBTWhmUTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0FOa2ZaO0FNOWVJO0VBQ0k7RUFDQTtBTmdmUjtBTTdlSTtFTHpGQTtFQUNBLG1CQUZxQjtFQUdyQix1QkFIb0M7RUFJcEMsbUJBSm9EO0FENmtCeEQ7QU0vZUk7RUw3RkE7RUFDQSxzQks2RndCO0VMNUZ4Qix1Qks0RmdDO0VMM0ZoQyxtQksyRndDO0VBQ3BDO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBLHlCSm5HUTtFSW9HUjtFQUNBO0VBQ0E7QU5vZlI7QU1sZlE7RUwxR0o7RUFDQSxzQkswRzRCO0VMekc1QiwyQkt5R29DO0VMeEdwQyxtQkt3R2dEO0VBQ3hDO0FOdWZaO0FNcGZRO0VBQ0k7RUFDQSxxQkpwR0M7RUlxR0Q7QU5zZlo7QU1wZlk7RUFDSSxlSnRGSDtBRjRrQmI7QU1sZlE7RUx6SEo7RUFDQSxtQkFGcUI7RUFHckIsdUJBSG9DO0VBSXBDLG1CQUpvRDtFSzRINUM7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBTnVmWjtBTXJmWTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QU51ZmhCO0FNamZJO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7QU5tZlI7QU1sZlk7RUFDSSx5Qko3SUw7RUk4SUs7RUFDQTtFQUNBO0FOb2ZoQjtBTWpmWTtFQUNJLHlCSm5KRDtFSW9KQztBTm1maEI7QU0vZUk7RUFDSTtFQUNBO0FOaWZSOztBTTVlQTtFTHJLSTtFQUNBLHNCS3FLb0I7RUxwS3BCLHVCS29LNEI7RUxuSzVCLG1CS21Lb0M7RUFDcEMseUJKdEthO0VJdUtiO0FOa2ZKOztBTTllSTtFQUNJLHlCSjNLUTtBRjRwQmhCO0FNL2VRO0VBQ0kseUJKL0tLO0FGZ3FCakI7O0FNN2VBO0VMcExJO0VBQ0Esc0JLb0xvQjtFTG5McEIsdUJLbUw0QjtFTGxMNUIsbUJLa0xvQztFQUNwQztFQUNBO0VBQ0E7RUFDQSxxQko1S1M7RUk2S1QsZUp6Slk7RUkwSlo7RUFDQSxjSnRMVztFSXVMWDtFQUNBO0FObWZKO0FNamZJO0VBQ0k7RUFDQTtFQUNBO0FObWZSO0FNaGZJO0VBQ0ksNkJKNUxVO0FGOHFCbEI7O0FNN2VBO0VMNU1JO0VBQ0Esc0JLNE1vQjtFTDNNcEIsdUJLMk00QjtFTDFNNUIsbUJLME1tQztBTm1mdkM7QU1qZkk7RUFDSTtFQUNBO0FObWZSO0FNamZRO0VBQ0k7QU5tZlo7QU05ZUk7RUx6TkE7RUFDQSxtQkFGcUI7RUFHckIsOEJLd05rQztFTHZObEMsbUJBSm9EO0VLNE5oRDtFQUNBO0FObWZSO0FNamZJO0VMOU5BO0VBQ0Esc0JLOE53QjtFTDdOeEIsdUJLNk5nQztFTDVOaEMsdUJLNE53QztFQUNwQztFQUNBO0VBQ0E7QU5zZlI7QU1wZlE7RUxwT0o7RUFDQSxzQktvTzRCO0VMbk81Qix1QkttT29DO0VMbE9wQyx1QktrTzRDO0VBQ3BDO0VBQ0E7QU55Zlo7QU14Zlk7RUFDSTtBTjBmaEI7QU1yZkk7RUFDSTtFQUNBO0FOdWZSO0FNcmZRO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBTnVmWjs7QU1sZkE7RUw1UEk7RUFDQSxzQks0UG9CO0VMM1BwQix1QksyUDRCO0VMMVA1Qix1QkswUG9DO0FOd2Z4QztBTXRmSTtFQUNJO0FOd2ZSO0FNcmZJO0VMblFBO0VBQ0EsbUJBRnFCO0VBR3JCLDJCS2tRa0M7RUxqUWxDLG1CQUpvRDtFS3NRaEQ7RUFDQTtBTjBmUjtBTXhmUTtFTHhRSjtFQUNBLHNCS3dRNEI7RUx2UTVCLHVCS3VRb0M7RUx0UXBDLHVCS3NRNEM7RUFDcEM7RUFDQTtFQUNBO0FONmZaO0FNM2ZZO0VMOVFSO0VBQ0Esc0JLOFFnQztFTDdRaEMsdUJLNlF3QztFTDVReEMscUJLNFFnRDtFQUNwQztFQUNBO0FOZ2dCaEI7QU0vZmdCO0VBQ0k7QU5pZ0JwQjs7QU0xZkE7RUwxUkk7RUFDQSxzQkswUm9CO0VMelJwQix1Qkt5UjRCO0VMeFI1QixtQkt3Um9DO0FOZ2dCeEM7QU05Zkk7RUFDSTtBTmdnQlI7QU03Zkk7RUxqU0E7RUFDQSwyQktpU29DO0VMaFNwQyx1QkFIb0M7RUFJcEMsbUJBSm9EO0VLb1NoRDtFQUNBO0FOa2dCUjtBTS9mUTtFTHZTSjtFQUNBLHNCS3VTNEI7RUx0UzVCLHVCS3NTb0M7RUxyU3BDLHFCS3FTNEM7RUFDcEM7RUFDQTtFQUNBO0VBQ0E7QU5vZ0JaO0FNbmdCWTtFTDdTUjtFQUNBLHNCSzZTZ0M7RUw1U2hDLHVCSzRTd0M7RUwzU3hDLHFCSzJTZ0Q7RUFDcEM7RUFDQTtBTndnQmhCO0FNdmdCZ0I7RUFDSTtBTnlnQnBCO0FNcmdCUTtFQUNJO0VBQ0E7QU51Z0JaO0FNdGdCWTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QU53Z0JoQjs7QU1sZ0JBO0VMcFVJO0VBQ0Esc0JLb1VvQjtFTG5VcEIsdUJLbVU0QjtFTGxVNUIsbUJLa1VvQztBTndnQnhDO0FNdGdCSTtFTHZVQTtFQUNBLDJCS3VVb0M7RUx0VXBDLHVCQUhvQztFQUlwQyxtQkFKb0Q7RUswVWhEO0VBQ0E7QU4yZ0JSO0FNemdCUTtFTDVVSjtFQUNBLHNCSzRVNEI7RUwzVTVCLHVCSzJVb0M7RUwxVXBDLG1CSzBVNEM7RUFDcEM7RUFDQTtBTjhnQlo7QU01Z0JZO0VMalZSO0VBQ0Esc0JLaVZnQztFTGhWaEMsdUJLZ1Z3QztFTC9VeEMsbUJLK1UrQztBTmloQm5EO0FNOWdCWTtFTHJWUjtFQUNBLHNCS3FWZ0M7RUxwVmhDLHVCS29Wd0M7RUxuVnhDLG1CS21WZ0Q7QU5taEJwRDtBTWxoQmdCO0VBQ0k7QU5vaEJwQjs7QU03Z0JBO0VBRUk7SUFDSTtFTitnQk47RU16Z0JjO0lBQ0k7RU4yZ0JsQjtFTXBnQk07SUFDSTtFTnNnQlY7RU1uZ0JFO0lBQ0k7RU5xZ0JOO0VNbGdCTTtJTHhYSjtJQUNBLDhCS3dYNEI7SUx2WDVCLHVCS3VYNEM7SUx0WDVDLG1CS3NYb0Q7RU51Z0J0RDtFTXBnQk07SUw1WEo7SUFDQSxzQks0WDRCO0lMM1g1Qix1QksyWG9DO0lMMVhwQyxtQkswWDRDO0lBQ3BDO0lBQ0E7SUFDQTtFTnlnQlY7RU10Z0JNO0lBQ0k7SUFDQTtFTndnQlY7RU1sZ0JNO0lBQ0k7RU5vZ0JWO0VNamdCTTtJTC9ZSjtJQUNBLHNCSytZNEI7SUw5WTVCLHVCSzhZb0M7SUw3WXBDLG1CSzZZNEM7RU5zZ0I5QztFTXBnQlU7SUxsWlI7SUFDQSxzQktrWmdDO0lMalpoQyx1QktpWndDO0lMaFp4QyxtQktnWmdEO0lBQ3BDO0lBQ0E7RU55Z0JkO0VNdmdCYztJTHZaWjtJQUNBLHNCS3Vab0M7SUx0WnBDLHVCS3NaNEM7SUxyWjVDLHVCS3Fab0Q7SUFDcEM7RU40Z0JsQjtFTXBnQk07SUFDSTtJQUNBO0VOc2dCVjtFTW5nQk07SUx0YUo7SUFDQSxzQktzYTRCO0lMcmE1Qix1QktxYW9DO0lMcGFwQyxtQktvYTRDO0VOd2dCOUM7RU10Z0JVO0lMemFSO0lBQ0Esc0JLeWFnQztJTHhhaEMsdUJLd2F3QztJTHZheEMsbUJLdWFnRDtJQUNwQztJQUNBO0VOMmdCZDtFTXpnQmM7SUw5YVo7SUFDQSxzQks4YW9DO0lMN2FwQyx1Qks2YTRDO0lMNWE1Qyx1Qks0YW9EO0lBQ3BDO0VOOGdCbEI7RU0xZ0JVO0lBQ0k7SUFDQTtFTjRnQmQ7RU12Z0JFO0lBQ0k7RU55Z0JOO0FBQ0Y7QU9uOEJBO0VOSEk7RUFDQSxzQk1Hb0I7RU5GcEIsMkJNRTRCO0VORDVCLG1CTUN3QztFQUN4QztFQUNBO0VBQ0EsbUJMUE07QUYrOEJWO0FPdDhCSTtFTlRBO0VBQ0EsbUJBRnFCO0VBR3JCLDJCTVFrQztFTlBsQyxtQkFKb0Q7RU1ZaEQ7RUFDQTtFQUNBO0FQMjhCUjtBT3o4QlE7RUFDSTtFQUNBLGNMVkQ7RUtXQztBUDI4Qlo7QU96OEJZO0VBQ0k7QVAyOEJoQjtBT3Q4Qkk7RU4xQkE7RUFDQSxzQk0wQndCO0VOekJ4Qix1Qk15QmdDO0VOeEJoQyxtQk13QndDO0VBQ3BDO0VBQ0E7RUFDQTtFQUNBO0FQMjhCUjtBT3o4QlE7RU5qQ0o7RUFDQSxtQkFGcUI7RUFHckIsdUJBSG9DO0VBSXBDLG1CQUpvRDtFTW9DNUMscUJMdEJDO0VLdUJEO0FQODhCWjtBTzU4Qlk7RUFDSSxlTFRIO0FGdTlCYjtBTzc3Qkk7RU54REE7RUFDQSxzQk13RHdCO0VOdkR4Qix1Qk11RGdDO0VOdERoQyxtQk1zRHdDO0VBQ3BDO0FQazhCUjtBT2g4QlE7RUFDSTtBUGs4Qlo7QU85N0JRO0VBQ0k7RUFDQTtFQUNBLGNMOURHO0VLK0RIO0VBQ0EsZUxwQ0k7RUtxQ0o7RUFDQTtFQUNBO0VBQ0E7QVBnOEJaO0FPOTdCZ0I7RUFDSSxjTHhFVDtBRndnQ1g7QU81N0JRO0VOakZKO0VBQ0Esc0JNaUY0QjtFTmhGNUIsMkJNZ0ZvQztFTi9FcEMsbUJNK0VnRDtFQUN4QztFQUNBO0FQaThCWjtBTy83Qlk7RUFDSTtBUGk4QmhCO0FPOTdCWTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBUGc4QmhCO0FPOTdCZ0I7RUFDSSx5QkxyR0g7QUZxaUNqQjtBTzU3Qlk7RUFDSTtBUDg3QmhCO0FPMzdCWTtFQUNJLGNMekdEO0VLMEdDLDZCTHJHRTtFS3NHRixlTDdFRTtFSzhFRjtFQUNBO0FQNjdCaEI7QU96N0JZO0VBQ0kscUJMM0dIO0VLNEdHLGVMdkZBO0VLd0ZBLGNMcEhEO0FGK2lDZjtBT3g3Qlk7RUFDUTtFQUNBO0VBQ0EsY0wxSEw7RUsySEssZUwvRko7QUZ5aENoQjtBT3Q3QlE7RU5ySUo7RUFDQSxtQkFGcUI7RUFHckIsdUJBSG9DO0VBSXBDLG1CQUpvRDtFTXdJNUM7RUFDQTtFQUNBLHlCTHhJSztFS3lJTDtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FQMjdCWjtBT3o3Qlk7RUFDSSx5QkwvSUE7RUtnSkE7QVAyN0JoQjtBT3g3Qlk7RUFDSTtFQUNBLGNMakpEO0VLa0pDLHFCTDNJSDtFSzRJRyxlTHRIQztBRmdqQ2pCO0FPcjdCSTtFTjlKQTtFQUNBLG1CQUZxQjtFQUdyQix1QkFIb0M7RUFJcEMsbUJBSm9EO0VNaUtoRDtFQUNBO0VBQ0E7RUFDQSxjTDdKTztFSzhKUCxlTGxJUTtBRjRqQ2hCO0FPeDdCUTtFQUNJLGNMaktHO0VLa0tIO0VBQ0E7RUFDQTtFQUNBO0FQMDdCWjtBT3g3Qlk7RUFDSSxjTHpLTDtBRm1tQ1g7QU9wN0JJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0EscUJMakxTO0VLa0xUO0VBQ0E7RUFDQTtBUHM3Qko7QU9wN0JJO0VBQ0kseUJMbk1TO0FGeW5DakI7QU9uN0JJO0VBQ0k7QVBxN0JSO0FPLzZCQTtFQUNJO0FQaTdCSjtBTzk2QkE7RUFDSTtBUGc3Qko7QU85NkJBO0VOck5JO0VBQ0EsbUJBRnFCO0VBR3JCLHVCQUhvQztFQUlwQyxtQkFKb0Q7RU13TnBEO0VBQ0E7RUFDQSxxQkw1TVM7RUs2TVQsZUx4TFk7RUt5TFo7QVBtN0JKO0FPLzZCQTtFTi9OSTtFQUNBLHNCTStOb0I7RU45TnBCLHVCTThONEI7RU43TjVCLG1CTTZOb0M7RUFDcEM7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBLGNMaE9XO0FGb3BDZjtBT2w3Qkk7RUFDSSxxQkw1Tks7RUs2Tkw7QVBvN0JSO0FPajdCSTtFTjdPQTtFQUNBLHNCTTZPd0I7RU41T3hCLHVCTTRPZ0M7RU4zT2hDLG1CTTJPd0M7RUFDcEM7RUFDQTtBUHM3QlI7QU9yN0JRO0VBQ0ksNEJMdE9LO0FGNnBDakI7O0FPLzZCQTtFQUdRO0lBQ0E7RVBnN0JOO0FBQ0Y7QU81NkJBO0VBR1E7SUFDQTtFUDQ2Qk47QUFDRjtBUWpyQ0E7RVBISTtFQUNBLHNCT0dvQjtFUEZwQix1Qk9FNEI7RVBENUIsbUJPQ29DO0FSc3JDeEM7QVFwckNRO0VBQ0k7QVJzckNaO0FRbnJDUTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBLHlCTmhCSztFTWlCTDtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FScXJDWjtBUXByQ1k7RUFDSSx5Qk50QkE7RU11QkE7QVJzckNoQjtBUW5yQ1k7RUFDSSxjTnZCRDtFTXdCQyxxQk5qQkg7RU1rQkcsZU5JQztBRmlyQ2pCO0FRanJDSTtFUG5DQTtFQUNBLHNCT21Dd0I7RVBsQ3hCLDJCT2tDZ0M7RVBqQ2hDLG1CT2lDNEM7RUFDeEM7QVJzckNSO0FRbnJDSTtFUHhDQTtFQUNBLHNCT3dDd0I7RVB2Q3hCLHVCT3VDZ0M7RVB0Q2hDLHVCT3NDd0M7RUFFcEM7RUFDQTtFQUNBO0FSdXJDUjtBUXJyQ1E7RVAvQ0o7RUFDQSxzQk8rQzRCO0VQOUM1Qix1Qk84Q29DO0VQN0NwQyxxQk82QzRDO0VBQ3BDO0VBQ0E7RUFDQTtFQUNBLHFCTnZDQztFTXdDRDtBUjByQ1o7QVF4ckNZO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQSxjTnRERDtFTXVEQztFQUNBO0FSMHJDaEI7QVF4ckNnQjtFQUNJLHlCTmhFSDtBRjB2Q2pCO0FRdHJDWTtFQUNJLGVOcENBO0VNcUNBLGNObEVMO0FGMHZDWDtBUXByQ1E7RVAzRUo7RUFDQSxzQk8yRTRCO0VQMUU1Qix1Qk8wRW9DO0VQekVwQyx1Qk95RTRDO0VBQ3BDO0VBQ0E7QVJ5ckNaO0FRdHJDUTtFUGpGSjtFQUNBLG1CQUZxQjtFQUdyQiwyQk9nRnNDO0VQL0V0QyxtQkFKb0Q7RU9vRjVDO0VBQ0E7RUFDQTtFQUNBO0VBQ0EscUJOMUVDO0FGcXdDYjtBUXpyQ1k7RUFDSTtFQUNBO0VBQ0EsY050RkQ7RU11RkM7QVIyckNoQjtBUXRyQ0k7RVBsR0E7RUFDQSxzQk9rR3dCO0VQakd4Qix1Qk9pR2dDO0VQaEdoQyxtQk9nR3dDO0VBQ3BDLHlCTmxHUTtFTW1HUjtFQUNBO0VBQ0E7RUFDQTtBUjJyQ1I7QVF6ckNRO0VQMUdKO0VBQ0EsbUJBRnFCO0VBR3JCLDhCT3lHc0M7RVB4R3RDLG1CQUpvRDtFTzZHNUMscUJOL0ZDO0VNZ0dEO0FSOHJDWjtBUTVyQ1k7RUFDSSxlTmxGSDtFTW1GRztBUjhyQ2hCO0FRM3JDWTtFQUNJLGVObkZBO0VNb0ZBLGNOaEhEO0VNaUhDO0FSNnJDaEI7QVF6ckNRO0VBQ0k7RUFDQTtBUjJyQ1o7QVF4ckNRO0VBQ0k7RUFDQTtBUjByQ1o7QVF4ckNZO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QVIwckNoQjtBUXRyQ1E7RUFDSTtFQUNBO0FSd3JDWjtBUXRyQ1k7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBUndyQ2hCO0FRbnJDUTtFQUNJO0FScXJDWjtBUW5yQ1k7RUFDSSx5Qk5uS047QUZ3MUNWO0FRaHJDSTtFQUNJO0FSa3JDUjtBUWhyQ1E7RUFDSSxxQk4vSkM7QUZpMUNiO0FRaHJDWTtFQUNJLGVOakpIO0VNa0pHO0FSa3JDaEI7O0FTLzFDQTtFUkhJO0VBQ0Esc0JRR29CO0VSRnBCLHVCUUU0QjtFUkQ1QixtQlFDb0M7QVRxMkN4QztBU24yQ0k7RUFDSTtBVHEyQ1I7O0FVeDJDQTtFVEpJO0VBQ0EsbUJBRnFCO0VBR3JCLHVCQUhvQztFQUlwQyx1QlNFNEI7RUFDNUI7QVY4MkNKO0FVNTJDSTtFVFJBO0VBQ0Esc0JTUXdCO0VUUHhCLHVCU09nQztFVE5oQyxtQlNNd0M7RUFDcEM7RUFDQTtBVmkzQ1I7QVU5MkNJO0VUZEE7RUFDQSxzQlNjd0I7RVRieEIsdUJTYWdDO0VUWmhDLHVCU1l3QztFQUNwQztFQUNBO0VBQ0E7QVZtM0NSLEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hc3NldHMvc3R5bGVzL2xheW91dC9faGVhZGVyLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXNzZXRzL3N0eWxlcy9hcHAuc2NzcyIsIndlYnBhY2s6Ly8vLi9hc3NldHMvc3R5bGVzL2Fic3RyYWN0L19taXhpbi5zY3NzIiwid2VicGFjazovLy8uL2Fzc2V0cy9zdHlsZXMvYWJzdHJhY3QvX3ZhcmlhYmxlcy5zY3NzIiwid2VicGFjazovLy8uL2Fzc2V0cy9zdHlsZXMvYWJzdHJhY3QvX3NldHVwLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXNzZXRzL3N0eWxlcy9sYXlvdXQvX2Zvb3Rlci5zY3NzIiwid2VicGFjazovLy8uL2Fzc2V0cy9zdHlsZXMvYWJzdHJhY3QvX2ZvbnQuc2NzcyIsIndlYnBhY2s6Ly8vLi9hc3NldHMvc3R5bGVzL3BhZ2VzL19sYW5kaW5nLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXNzZXRzL3N0eWxlcy9wYWdlcy9fdXNlcl9mb3JtLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXNzZXRzL3N0eWxlcy9wYWdlcy9fdXNlcl9wcm9maWxlLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXNzZXRzL3N0eWxlcy9wYWdlcy9fbm90aWZpY2F0aW9ucy5zY3NzIiwid2VicGFjazovLy8uL2Fzc2V0cy9zdHlsZXMvcGFnZXMvX2ZlZWQuc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyJAdXNlIFwiLi4vYWJzdHJhY3QvbWl4aW5cIjtcbkB1c2UgXCIuLi9hYnN0cmFjdC92YXJpYWJsZXNcIiBhcyB2YXI7XG5cbi8vIHBvdXIgbGEgbGFuZGluZyBoZWFkZXIgbMOpZ8OocmVtZW50IGRpZmbDqXJlbnQgcXVlIHBvdXIgbGUgcmVzdGUgZHUgc2l0ZVxuLmhlYWRlcl9tb2JpbGUge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHotaW5kZXg6IDk5OTk7XG4gICAgcGFkZGluZy10b3A6IDIwcHg7XG4gICAgcGFkZGluZy1ib3R0b206IDIwcHg7XG5cbiAgICAubG9nb193cmFwcGVyIHtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAzMHB4O1xuICAgICAgICBAaW5jbHVkZSBtaXhpbi5mbGV4O1xuXG4gICAgICAgIGltZyB7XG4gICAgICAgICAgICB3aWR0aDogNTBweDtcbiAgICAgICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgICB9XG4gICAgfVxuXG5cbiAgICAgLy8vLy8vLy8gQlVSR0VSIE1FTlUvLy8vLy8vLy8vLy9cbiAgICAgXG4gICAgIC5oYW1fd3JhcHBlciB7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDMwcHg7XG5cbiAgICAgICAgLmhhbV9idXJnZXIge1xuICAgICAgICAgICAgaGVpZ2h0OiA1MHB4O1xuICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICAgICAgICB3aWR0aDogNTBweDtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgICAgICAgICBzcGFuIHtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDJweDtcbiAgICAgICAgICAgICAgICB6LWluZGV4OiA5OTk5O1xuICAgICAgICAgICAgICAgIHdpZHRoOiA3MCU7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyLiRncmF5RGFya1RleHQ7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMjVweDtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgdG9wOiA1MCU7XG4gICAgICAgICAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyB0cmFuc2l0aW9uIHNhdWYgcG91ciBsZSAyZW1lIHF1aSBkaXNwYXJhaXQgZGlyZWN0ZW1lbnQgYXUgY2xpY1xuICAgICAgICAgICAgc3Bhbjpub3QoOm50aC1jaGlsZCgyKSkge1xuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IC4zcyBlYXNlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBzcGFuOm50aC1jaGlsZCgxKSB7XG4gICAgICAgICAgICAgICAgdG9wOiAyNSU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHNwYW46bnRoLWNoaWxkKDMpIHtcbiAgICAgICAgICAgICAgICB0b3A6IDc1JTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJi5hY3RpdmUge1xuICAgICAgICAgICAgICAgIHNwYW46bnRoLWNoaWxkKDEpIHtcbiAgICAgICAgICAgICAgICAgICAgdG9wOiA1MCU7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpIHJvdGF0ZSg0NWRlZyk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgc3BhbjpudGgtY2hpbGQoMikge1xuICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHNwYW46bnRoLWNoaWxkKDMpIHtcbiAgICAgICAgICAgICAgICAgICAgdG9wOiA1MCU7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpIHJvdGF0ZSgtNDVkZWcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gXG4gICAgICAgIH1cbiAgICAgfVxuXG4gICAgLm9mZl9zY3JlZW5fbWVudSB7XG4gICAgICAgIEBpbmNsdWRlIG1peGluLmZsZXgoY29sdW1uLCBjZW50ZXIsIGNlbnRlcik7XG4gICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyLiRzZWNvbmRhcnlEYXJrO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgIHotaW5kZXg6IDk5OTg7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgcmlnaHQ6IC0xMDAlO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgICAgICAgdHJhbnNpdGlvbjogLjNzIGVhc2U7XG5cbiAgICAgICAgJi5hY3RpdmUge1xuICAgICAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgIH1cblxuICAgICAgICBuYXYge1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyLiRzZWNvbmRhcnlEYXJrO1xuXG4gICAgICAgICAgICB1bCB7XG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgbWl4aW4uZmxleChjb2x1bW4sIHNwYWNlLWJldHdlZW4sIGNlbnRlcik7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyLiRzZWNvbmRhcnlEYXJrO1xuICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiB2YXIuJGRtLXJlZ3VsYXI7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiB2YXIuJGRlc2t0b3AtaDM7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIEFmZmljaGFnZSBkZXMgbGllbnMgZGUgbGEgbmF2aWdhdGlvblxuICAgICAgICAgICAgLm5hdl9saW5rcyB7XG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgbWl4aW4uZmxleChjb2x1bW4sIGNlbnRlcixjZW50ZXIpO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGEge1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogdmFyLiRncmF5RGFya1RleHQ7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLm1hdGVyaWFsLWljb25zIHtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyLiRzZWNvbmRhcnlEYXJrO1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogdmFyLiRncmF5RGFya1RleHQ7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMzVweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIEFmZmljaGFnZSBkZXMgbGllbnMgZGUgY29ubmV4aW9uXG4gICAgICAgICAgICAubG9nX2xpbmtzIHtcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBtaXhpbi5mbGV4KCRkaXJlY3Rpb246IGNvbHVtbik7XG4gICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogNXJlbTtcbiAgICAgICAgICAgICAgICBnYXA6IDEuNXJlbTtcblxuICAgICAgICAgICAgICAgIGEge1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogdmFyLiRncmF5RGFya1RleHQ7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDVweCAyMHB4O1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAzcHg7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHZhci4kZ3JheVRleHQ7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgYS5sb2dvdXQge1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIuJGxvZ291dEJ0bjtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBhLnNpZ251cCB7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhci4kY29tcGxlbWVudGFyeTtcblxuICAgICAgICAgICAgICAgICAgICAvLyAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgIGJhY2tncm91bmQtY29sb3I6IHZhci4kO1xuICAgICAgICAgICAgICAgICAgICAvLyB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgYS5sb2dpbiB7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhci4kcHJpbWFyeTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi5oZWFkZXJfZGVza3RvcCB7XG4gICAgQGluY2x1ZGUgbWl4aW4uZmxleChjb2x1bW4sIGNlbnRlciwgY2VudGVyKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIuJHNlY29uZGFyeURhcms7XG4gICAgcGFkZGluZy10b3A6IDIwcHg7XG4gICAgcGFkZGluZy1ib3R0b206IDIwcHg7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHotaW5kZXg6IDk5OTk7XG5cbiAgICAubG9nb193cmFwcGVyIHtcbiAgICAgICAgQGluY2x1ZGUgbWl4aW4uZmxleDtcblxuICAgICAgICBpbWcge1xuICAgICAgICAgICAgd2lkdGg6IDE1MHB4O1xuICAgICAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAuc2Vjb25kX2xpbmUge1xuICAgICAgICBAaW5jbHVkZSBtaXhpbi5mbGV4O1xuICAgICAgICBib3JkZXItdG9wOiAxcHggc29saWQgdmFyLiRncmF5RGFya1RleHQ7XG4gICAgICAgIHBhZGRpbmctdG9wOiAyMHB4O1xuICAgICAgICBtYXJnaW4tdG9wOiAyMHB4O1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBnYXA6IDJyZW07XG5cbiAgICAgICAgbmF2IHtcbiAgICAgICAgICAgIEBpbmNsdWRlIG1peGluLmZsZXg7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhci4kc2Vjb25kYXJ5RGFyaztcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiB2YXIuJGRtLXJlZ3VsYXI7XG4gICAgICAgICAgICBmb250LXNpemU6IHZhci4kZGVza3RvcC1oMzsgICAgICAgICAgICBcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuXG4gICAgICAgICAgICAubmF2X2xpbmtzIHtcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBtaXhpbi5mbGV4O1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcblxuICAgICAgICAgICAgICAgIGxpIHtcbiAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgbWl4aW4uZmxleDtcblxuICAgICAgICAgICAgICAgICAgICAmOm5vdCg6Zmlyc3Qtb2YtdHlwZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiA2MHB4O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLmxvZ19saW5rcyB7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgICAgIHRvcDogMzUlO1xuICAgICAgICAgICAgICAgIHJpZ2h0OiAzMHB4O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAubm90X3JlZ2lzdGVyZWQge1xuICAgICAgICAgICAgICAgIEBpbmNsdWRlIG1peGluLmZsZXg7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgZ2FwOiAyMHB4O1xuXG4gICAgICAgICAgICAgICAgYSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiB2YXIuJGdyYXlEYXJrVGV4dDtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogNXB4IDIwcHg7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgdmFyLiRncmF5VGV4dDtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBhLmxvZ291dCB7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhci4kbG9nb3V0QnRuO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGEuc2lnbnVwIHtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyLiRjb21wbGVtZW50YXJ5O1xuXG4gICAgICAgICAgICAgICAgICAgIC8vICY6aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICAvLyAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyLiQ7XG4gICAgICAgICAgICAgICAgICAgIC8vIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBhLmxvZ2luIHtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyLiRwcmltYXJ5O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLm1hdGVyaWFsLWljb25zIHtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIuJHNlY29uZGFyeURhcms7XG4gICAgICAgICAgICAgICAgY29sb3I6IHZhci4kZ3JheURhcmtUZXh0O1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMzVweDtcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiAuM3MgZWFzZTtcblxuICAgICAgICAgICAgICAgICYuYWN0aXZlIHtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHZhci4kY29tcGxlbWVudGFyeTtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIHZhci4kY29tcGxlbWVudGFyeTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiB2YXIuJGNvbXBsZW1lbnRhcnk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuaGVhZGVyX21vYmlsZSB7XG4gICAgQGluY2x1ZGUgbWl4aW4uZmxleCgkanVzdGlmeTogc3BhY2UtYmV0d2Vlbik7XG4gIH1cblxuICAuaGVhZGVyX2Rlc2t0b3Age1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn0iLCIuaGVhZGVyX21vYmlsZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgei1pbmRleDogOTk5OTtcbiAgcGFkZGluZy10b3A6IDIwcHg7XG4gIHBhZGRpbmctYm90dG9tOiAyMHB4O1xufVxuLmhlYWRlcl9tb2JpbGUgLmxvZ29fd3JhcHBlciB7XG4gIHBhZGRpbmctbGVmdDogMzBweDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4uaGVhZGVyX21vYmlsZSAubG9nb193cmFwcGVyIGltZyB7XG4gIHdpZHRoOiA1MHB4O1xuICBvYmplY3QtZml0OiBjb3Zlcjtcbn1cbi5oZWFkZXJfbW9iaWxlIC5oYW1fd3JhcHBlciB7XG4gIHBhZGRpbmctcmlnaHQ6IDMwcHg7XG59XG4uaGVhZGVyX21vYmlsZSAuaGFtX3dyYXBwZXIgLmhhbV9idXJnZXIge1xuICBoZWlnaHQ6IDUwcHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIHdpZHRoOiA1MHB4O1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLmhlYWRlcl9tb2JpbGUgLmhhbV93cmFwcGVyIC5oYW1fYnVyZ2VyIHNwYW4ge1xuICBoZWlnaHQ6IDJweDtcbiAgei1pbmRleDogOTk5OTtcbiAgd2lkdGg6IDcwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzNCM0IzQjtcbiAgYm9yZGVyLXJhZGl1czogMjVweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgbGVmdDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbn1cbi5oZWFkZXJfbW9iaWxlIC5oYW1fd3JhcHBlciAuaGFtX2J1cmdlciBzcGFuOm5vdCg6bnRoLWNoaWxkKDIpKSB7XG4gIHRyYW5zaXRpb246IDAuM3MgZWFzZTtcbn1cbi5oZWFkZXJfbW9iaWxlIC5oYW1fd3JhcHBlciAuaGFtX2J1cmdlciBzcGFuOm50aC1jaGlsZCgxKSB7XG4gIHRvcDogMjUlO1xufVxuLmhlYWRlcl9tb2JpbGUgLmhhbV93cmFwcGVyIC5oYW1fYnVyZ2VyIHNwYW46bnRoLWNoaWxkKDMpIHtcbiAgdG9wOiA3NSU7XG59XG4uaGVhZGVyX21vYmlsZSAuaGFtX3dyYXBwZXIgLmhhbV9idXJnZXIuYWN0aXZlIHNwYW46bnRoLWNoaWxkKDEpIHtcbiAgdG9wOiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpIHJvdGF0ZSg0NWRlZyk7XG59XG4uaGVhZGVyX21vYmlsZSAuaGFtX3dyYXBwZXIgLmhhbV9idXJnZXIuYWN0aXZlIHNwYW46bnRoLWNoaWxkKDIpIHtcbiAgb3BhY2l0eTogMDtcbn1cbi5oZWFkZXJfbW9iaWxlIC5oYW1fd3JhcHBlciAuaGFtX2J1cmdlci5hY3RpdmUgc3BhbjpudGgtY2hpbGQoMykge1xuICB0b3A6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSkgcm90YXRlKC00NWRlZyk7XG59XG4uaGVhZGVyX21vYmlsZSAub2ZmX3NjcmVlbl9tZW51IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0UzREFDQztcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB6LWluZGV4OiA5OTk4O1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAtMTAwJTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDJyZW07XG4gIHRyYW5zaXRpb246IDAuM3MgZWFzZTtcbn1cbi5oZWFkZXJfbW9iaWxlIC5vZmZfc2NyZWVuX21lbnUuYWN0aXZlIHtcbiAgcmlnaHQ6IDA7XG59XG4uaGVhZGVyX21vYmlsZSAub2ZmX3NjcmVlbl9tZW51IG5hdiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNFM0RBQ0M7XG59XG4uaGVhZGVyX21vYmlsZSAub2ZmX3NjcmVlbl9tZW51IG5hdiB1bCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0UzREFDQztcbiAgZm9udC1mYW1pbHk6IFwiRG1TYW5zXCI7XG4gIGZvbnQtc2l6ZTogMzJweDtcbn1cbi5oZWFkZXJfbW9iaWxlIC5vZmZfc2NyZWVuX21lbnUgbmF2IC5uYXZfbGlua3Mge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbi5oZWFkZXJfbW9iaWxlIC5vZmZfc2NyZWVuX21lbnUgbmF2IC5uYXZfbGlua3MgYSB7XG4gIGNvbG9yOiAjM0IzQjNCO1xufVxuLmhlYWRlcl9tb2JpbGUgLm9mZl9zY3JlZW5fbWVudSBuYXYgLm5hdl9saW5rcyAubWF0ZXJpYWwtaWNvbnMge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTNEQUNDO1xuICBjb2xvcjogIzNCM0IzQjtcbiAgZm9udC1zaXplOiAzNXB4O1xufVxuLmhlYWRlcl9tb2JpbGUgLm9mZl9zY3JlZW5fbWVudSBuYXYgLmxvZ19saW5rcyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBtYXJnaW4tdG9wOiA1cmVtO1xuICBnYXA6IDEuNXJlbTtcbn1cbi5oZWFkZXJfbW9iaWxlIC5vZmZfc2NyZWVuX21lbnUgbmF2IC5sb2dfbGlua3MgYSB7XG4gIGNvbG9yOiAjM0IzQjNCO1xuICBwYWRkaW5nOiA1cHggMjBweDtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBib3JkZXI6IDFweCBzb2xpZCAjQkFCQUJBO1xufVxuLmhlYWRlcl9tb2JpbGUgLm9mZl9zY3JlZW5fbWVudSBuYXYgLmxvZ19saW5rcyBhLmxvZ291dCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNFNkE5QTQ7XG59XG4uaGVhZGVyX21vYmlsZSAub2ZmX3NjcmVlbl9tZW51IG5hdiAubG9nX2xpbmtzIGEuc2lnbnVwIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0I5REFFNjtcbn1cbi5oZWFkZXJfbW9iaWxlIC5vZmZfc2NyZWVuX21lbnUgbmF2IC5sb2dfbGlua3MgYS5sb2dpbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGQUY5Rjc7XG59XG5cbi5oZWFkZXJfZGVza3RvcCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTNEQUNDO1xuICBwYWRkaW5nLXRvcDogMjBweDtcbiAgcGFkZGluZy1ib3R0b206IDIwcHg7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgei1pbmRleDogOTk5OTtcbn1cbi5oZWFkZXJfZGVza3RvcCAubG9nb193cmFwcGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4uaGVhZGVyX2Rlc2t0b3AgLmxvZ29fd3JhcHBlciBpbWcge1xuICB3aWR0aDogMTUwcHg7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xufVxuLmhlYWRlcl9kZXNrdG9wIC5zZWNvbmRfbGluZSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBib3JkZXItdG9wOiAxcHggc29saWQgIzNCM0IzQjtcbiAgcGFkZGluZy10b3A6IDIwcHg7XG4gIG1hcmdpbi10b3A6IDIwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGdhcDogMnJlbTtcbn1cbi5oZWFkZXJfZGVza3RvcCAuc2Vjb25kX2xpbmUgbmF2IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTNEQUNDO1xuICBmb250LWZhbWlseTogXCJEbVNhbnNcIjtcbiAgZm9udC1zaXplOiAzMnB4O1xuICB3aWR0aDogMTAwJTtcbn1cbi5oZWFkZXJfZGVza3RvcCAuc2Vjb25kX2xpbmUgbmF2IC5uYXZfbGlua3Mge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogMTAwJTtcbn1cbi5oZWFkZXJfZGVza3RvcCAuc2Vjb25kX2xpbmUgbmF2IC5uYXZfbGlua3MgbGkge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbi5oZWFkZXJfZGVza3RvcCAuc2Vjb25kX2xpbmUgbmF2IC5uYXZfbGlua3MgbGk6bm90KDpmaXJzdC1vZi10eXBlKSB7XG4gIHBhZGRpbmctbGVmdDogNjBweDtcbn1cbi5oZWFkZXJfZGVza3RvcCAuc2Vjb25kX2xpbmUgbmF2IC5sb2dfbGlua3Mge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMzUlO1xuICByaWdodDogMzBweDtcbn1cbi5oZWFkZXJfZGVza3RvcCAuc2Vjb25kX2xpbmUgbmF2IC5ub3RfcmVnaXN0ZXJlZCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiAgZ2FwOiAyMHB4O1xufVxuLmhlYWRlcl9kZXNrdG9wIC5zZWNvbmRfbGluZSBuYXYgLm5vdF9yZWdpc3RlcmVkIGEge1xuICBjb2xvcjogIzNCM0IzQjtcbiAgcGFkZGluZzogNXB4IDIwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI0JBQkFCQTtcbn1cbi5oZWFkZXJfZGVza3RvcCAuc2Vjb25kX2xpbmUgbmF2IC5ub3RfcmVnaXN0ZXJlZCBhLmxvZ291dCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNFNkE5QTQ7XG59XG4uaGVhZGVyX2Rlc2t0b3AgLnNlY29uZF9saW5lIG5hdiAubm90X3JlZ2lzdGVyZWQgYS5zaWdudXAge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjQjlEQUU2O1xufVxuLmhlYWRlcl9kZXNrdG9wIC5zZWNvbmRfbGluZSBuYXYgLm5vdF9yZWdpc3RlcmVkIGEubG9naW4ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkFGOUY3O1xufVxuLmhlYWRlcl9kZXNrdG9wIC5zZWNvbmRfbGluZSBuYXYgLm1hdGVyaWFsLWljb25zIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0UzREFDQztcbiAgY29sb3I6ICMzQjNCM0I7XG4gIGZvbnQtc2l6ZTogMzVweDtcbiAgdHJhbnNpdGlvbjogMC4zcyBlYXNlO1xufVxuLmhlYWRlcl9kZXNrdG9wIC5zZWNvbmRfbGluZSBuYXYgLm1hdGVyaWFsLWljb25zLmFjdGl2ZSB7XG4gIGNvbG9yOiAjQjlEQUU2O1xuICBib3JkZXItYm90dG9tOiAycHggc29saWQgI0I5REFFNjtcbn1cbi5oZWFkZXJfZGVza3RvcCAuc2Vjb25kX2xpbmUgbmF2IC5tYXRlcmlhbC1pY29uczpob3ZlciB7XG4gIGNvbG9yOiAjQjlEQUU2O1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuaGVhZGVyX21vYmlsZSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB9XG4gIC5oZWFkZXJfZGVza3RvcCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuKiB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG5ib2R5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZBRjlGNztcbn1cbmJvZHkgaDEge1xuICBmb250LWZhbWlseTogXCJUaWVtcG9zTWVkaXVtXCI7XG4gIGZvbnQtc2l6ZTogMTEwcHg7XG59XG5ib2R5IGgyIHtcbiAgZm9udC1zaXplOiAzMnB4O1xuICBmb250LXdlaWdodDogMzAwO1xufVxuYm9keSBwIHtcbiAgY29sb3I6ICMzQjNCM0I7XG59XG5cbi5tYXgtdy1zaXRlIHtcbiAgbWF4LXdpZHRoOiAxNDQwcHg7XG59XG5cbi5jdGEge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcGFkZGluZy1sZWZ0OiAyMHB4O1xuICBwYWRkaW5nLXJpZ2h0OiAyMHB4O1xuICBoZWlnaHQ6IDMwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGMEVFRTY7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgbWFyZ2luLWJvdHRvbTogNjBweDtcbiAgYm94LXNoYWRvdzogLTAuNXB4IDFweCA1cHggcmdiYSgwLCAwLCAwLCAwLjIpO1xuICBib3JkZXI6IDFweCBzb2xpZCAjQkFCQUJBO1xuICB0cmFuc2l0aW9uOiAwLjNzIGVhc2U7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbi5jdGE6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTNEQUNDO1xuICBib3gtc2hhZG93OiAwcHggMHB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMik7XG59XG4uY3RhIGEge1xuICBjb2xvcjogIzNCM0IzQjtcbiAgZm9udC1mYW1pbHk6IFwiRG1TYW5zXCI7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn1cblxuLmhhaWt1IHtcbiAgd2lkdGg6IDc4M3B4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTNEQUNDO1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbi5oYWlrdSBzcGFuIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRvcDogMTJweDtcbiAgcmlnaHQ6IDEycHg7XG4gIGNvbG9yOiAjM0IzQjNCO1xufVxuLmhhaWt1IC5jcmVhdG9yIHtcbiAgcGFkZGluZy1ib3R0b206IDEycHg7XG4gIGZvbnQtZmFtaWx5OiBcIkRtU2Fuc1wiO1xufVxuLmhhaWt1IC5jcmVhdG9yIHAge1xuICBmb250LXNpemU6IDIwcHg7XG59XG4uaGFpa3UgLmNyZWF0b3IgcCBhIHtcbiAgY29sb3I6ICMzQjNCM0I7XG4gIHRyYW5zaXRpb246IDAuM3MgZWFzZTtcbn1cbi5oYWlrdSAuY3JlYXRvciBwIGE6aG92ZXIge1xuICBjb2xvcjogI0JBQkFCQTtcbn1cbi5oYWlrdSAuY29udGVudCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZBRjlGNztcbiAgaGVpZ2h0OiAxMDBweDtcbiAgcGFkZGluZzogMTVweCAwcHggMTVweCAyMHB4O1xuICBmb250LWZhbWlseTogXCJUaWVtcG9zUmVndWxhclwiO1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG4gIGJveC1zaGFkb3c6IDBweCAzcHggNXB4IHJnYmEoMCwgMCwgMCwgMC4yNSk7XG59XG4uaGFpa3UgLmNvbnRlbnQgcCB7XG4gIGZvbnQtc2l6ZTogMjBweDtcbn1cbi5oYWlrdSAubGlrZS1jb21tZW50c19jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBtYXJnaW4tdG9wOiAyMHB4O1xufVxuLmhhaWt1IC5saWtlLWNvbW1lbnRzX2NvbnRhaW5lciAuY29tbWVudHMge1xuICBwYWRkaW5nLXJpZ2h0OiAxNXB4O1xufVxuLmhhaWt1IC5saWtlLWNvbW1lbnRzX2NvbnRhaW5lciAubGlrZSB7XG4gIHBhZGRpbmctcmlnaHQ6IDJweDtcbn1cbi5oYWlrdSAubGlrZS1jb21tZW50c19jb250YWluZXIgLm5icl9saWtlcyB7XG4gIGZvbnQtZmFtaWx5OiBcIkRtU2Fuc1wiO1xufVxuLmhhaWt1IC5saWtlLWNvbW1lbnRzX2NvbnRhaW5lciAubmJyX2xpa2VzIHAge1xuICBmb250LXNpemU6IDE0cHg7XG59XG5cbi5saWtlLWJ1dHRvbiwgLmNvbW1lbnQtYnV0dG9uIHtcbiAgYWxsOiB1bnNldDtcbn1cblxuLmxpa2UtaWNvbiB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgY29sb3I6ICMzQjNCM0I7XG59XG5cbi5jb21tZW50LWljb24ge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5jb21tZW50LW1vZGFsIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC40KTtcbiAgZGlzcGxheTogbm9uZTtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHotaW5kZXg6IDEwMDA7XG59XG5cbi5tb2RhbC1jb250ZW50IHtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIHBhZGRpbmc6IDJyZW07XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgbWF4LXdpZHRoOiA1MDBweDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5jbG9zZS1idXR0b24ge1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGZsb2F0OiByaWdodDtcbiAgZm9udC1zaXplOiAxLjVyZW07XG59XG5cbi5jb21tZW50c19jb250YWluZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIGJvZHkgaDEge1xuICAgIGZvbnQtc2l6ZTogNzBweDtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTUwcHgpIHtcbiAgYm9keSBoMSB7XG4gICAgZm9udC1zaXplOiAzcmVtO1xuICB9XG59XG5mb290ZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6ICNFM0RBQ0M7XG59XG5mb290ZXIgLmNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luLXRvcDogNTBweDtcbiAgbWFyZ2luLWJvdHRvbTogNTBweDtcbiAgZ2FwOiAxNzRweDtcbn1cbmZvb3RlciAubG9nb193cmFwcGVyIHtcbiAgd2lkdGg6IDE1MHB4O1xuICBwYWRkaW5nLWxlZnQ6IDYwcHg7XG59XG5mb290ZXIgLmxvZ29fd3JhcHBlciBpbWcge1xuICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgd2lkdGg6IDEwMCU7XG59XG5mb290ZXIgLmZvb3Rlcl9uYXYge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbmZvb3RlciAuZm9vdGVyX25hdiBuYXYge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIGdhcDogMjBweDtcbiAgZm9udC1mYW1pbHk6IFwiRG1TYW5zXCI7XG59XG5mb290ZXIgLmZvb3Rlcl9uYXYgbmF2IGEge1xuICBjb2xvcjogIzNCM0IzQjtcbiAgZm9udC1zaXplOiAxNHB4O1xuICB0cmFuc2l0aW9uOiAwLjNzIGVhc2U7XG59XG5mb290ZXIgLmZvb3Rlcl9uYXYgbmF2IGE6aG92ZXIge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgZm9vdGVyIHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgfVxuICBmb290ZXIgLmNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgZ2FwOiA2MHB4O1xuICB9XG4gIGZvb3RlciAubG9nb193cmFwcGVyIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDBweDtcbiAgfVxuICBmb290ZXIgLmZvb3Rlcl9uYXYgbmF2IHtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB9XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiVGllbXBvc1JlZ3VsYXJcIjtcbiAgc3JjOiB1cmwoXCIuLi8uLi9mb250L1RpZW1wb3NGaW5lLVJlZ3VsYXIud29mZjJcIik7XG4gIGZvbnQtd2VpZ2h0OiAyMDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJUaWVtcG9zTWVkaXVtXCI7XG4gIHNyYzogdXJsKFwiLi4vLi4vZm9udC9UaWVtcG9zRmluZS1NZWRpdW0ud29mZjJcIik7XG4gIGZvbnQtd2VpZ2h0OiA4MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJEbVNhbnNcIjtcbiAgc3JjOiB1cmwoXCIuLi8uLi9mb250L0RNU2Fucy1WYXJpYWJsZUZvbnRfb3Bzeix3Z2h0LnR0ZlwiKTtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuLmhlcm9fY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xufVxuLmhlcm9fY29udGFpbmVyIC5oZXJvIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAyNTBweDtcbn1cbi5oZXJvX2NvbnRhaW5lciAuaGVybyAudGl0bGUge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG59XG4uaGVyb19jb250YWluZXIgLmhlcm8gLnRpdGxlIGgxIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01NSUpO1xuICBtYXJnaW4tYm90dG9tOiAtMTVweDtcbn1cbi5oZXJvX2NvbnRhaW5lciAuaGVybyAudGl0bGUgaDMge1xuICBwYWRkaW5nLWxlZnQ6IDEwMHB4O1xuICBmb250LXNpemU6IDI0cHg7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG59XG5cbnNlY3Rpb24ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG59XG5zZWN0aW9uIC50aXRsZSB7XG4gIHBhZGRpbmctdG9wOiA2MHB4O1xuICBhbGlnbi1zZWxmOiBmbGV4LXN0YXJ0O1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luLWJvdHRvbTogMjJweDtcbiAgZm9udC1mYW1pbHk6IFwiRG1TYW5zXCI7XG59XG5zZWN0aW9uIC50aXRsZV9jb25jZXB0IHtcbiAgZm9udC1mYW1pbHk6IFwiRG1TYW5zXCI7XG4gIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XG4gIHBhZGRpbmctbGVmdDogMzBweDtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbn1cbnNlY3Rpb24gLnRleHRfY29uY2VwdCB7XG4gIGZvbnQtZmFtaWx5OiBcIkRtU2Fuc1wiO1xufVxuc2VjdGlvbiAudGV4dF9jb25jZXB0IHAge1xuICBmb250LWZhbWlseTogXCJEbVNhbnNcIjtcbiAgZm9udC1zaXplOiAyMHB4O1xuICBmb250LXdlaWdodDogMzAwO1xufVxuc2VjdGlvbiAudGV4dF9jb25jZXB0IHAgc3BhbiB7XG4gIGZvbnQtZmFtaWx5OiBcIlRpZW1wb3NSZWd1bGFyXCI7XG4gIGZvbnQtc2l6ZTogMjBweDtcbn1cbnNlY3Rpb24gLnN3aXBlci1wYXJlbnQge1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiAxNDQwcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuc2VjdGlvbiAuc3dpcGVyLXBhcmVudCAuc3dpcGVyLWNvbnRhaW5lciB7XG4gIHdpZHRoOiAxMDAlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmctYm90dG9tOiA0MHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuc2VjdGlvbiAuc3dpcGVyLXdyYXBwZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICB3aWR0aDogZnVsbDtcbn1cbnNlY3Rpb24gLnN3aXBlci1zbGlkZSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuc2VjdGlvbiAuc3dpcGVyLXNsaWRlLWNvbnRlbnQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgdGV4dC1hbGlnbjoganVzdGlmeTtcbiAgcGFkZGluZzogMjBweDtcbiAgbWF4LXdpZHRoOiA0MDBweDtcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbiAgaGVpZ2h0OiA1NTBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0UzREFDQztcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBnYXA6IDFlbTtcbn1cbnNlY3Rpb24gLnN3aXBlci1zbGlkZS1jb250ZW50IC50aXRsZV9jb250ZW50IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBnYXA6IDIwcHg7XG59XG5zZWN0aW9uIC5zd2lwZXItc2xpZGUtY29udGVudCAudGl0bGVfY2FyZCB7XG4gIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XG4gIGZvbnQtZmFtaWx5OiBcIkRtU2Fuc1wiO1xuICBmb250LXdlaWdodDogNzAwO1xufVxuc2VjdGlvbiAuc3dpcGVyLXNsaWRlLWNvbnRlbnQgLnRpdGxlX2NhcmQgaDMge1xuICBmb250LXNpemU6IDI0cHg7XG59XG5zZWN0aW9uIC5zd2lwZXItc2xpZGUtY29udGVudCAuaW1nX3dyYXBwZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgaGVpZ2h0OiAzMDBweDtcbiAgd2lkdGg6IDMwMHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XG59XG5zZWN0aW9uIC5zd2lwZXItc2xpZGUtY29udGVudCAuaW1nX3dyYXBwZXIgaW1nIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogMTAwJTtcbiAgb3BhY2l0eTogMC43NTtcbiAgd2lkdGg6IDEwMCU7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xufVxuc2VjdGlvbiAuc3dpcGVyLXBhZ2luYXRpb24ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG59XG5zZWN0aW9uIC5zd2lwZXItcGFnaW5hdGlvbiAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0JBQkFCQTtcbiAgd2lkdGg6IDEwcHg7XG4gIGhlaWdodDogMTBweDtcbiAgb3BhY2l0eTogMC41O1xufVxuc2VjdGlvbiAuc3dpcGVyLXBhZ2luYXRpb24gLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1hY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjM0IzQjNCO1xuICBvcGFjaXR5OiAxO1xufVxuc2VjdGlvbiAuY3RhIHtcbiAgbWFyZ2luLXRvcDogNTBweDtcbiAgYWxpZ24tc2VsZjogY2VudGVyO1xufVxuXG4uYmFja2dyb3VuZCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjBFRUU2O1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmhhaWt1X2RldGFpbHMgLmN0YSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNFM0RBQ0M7XG59XG4uaGFpa3VfZGV0YWlscyAuY3RhOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0YwRUVFNjtcbn1cblxuLmRldGFpbHNfY2hpbGQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcGFkZGluZy1yaWdodDogMThweDtcbiAgcGFkZGluZy1sZWZ0OiAxOHB4O1xuICB3aWR0aDogOTAlO1xuICBmb250LWZhbWlseTogXCJEbVNhbnNcIjtcbiAgZm9udC1zaXplOiAyMHB4O1xuICBmb250LXdlaWdodDogMzAwO1xuICBjb2xvcjogIzNCM0IzQjtcbiAgZ2FwOiAyMnB4O1xuICBtYXJnaW4tYm90dG9tOiA0ZW07XG59XG4uZGV0YWlsc19jaGlsZCAudGl0bGVfZGVzY3JpcHRpb24ge1xuICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gIG1hcmdpbi10b3A6IDYwcHg7XG4gIG1hcmdpbi1ib3R0b206IDQwcHg7XG59XG4uZGV0YWlsc19jaGlsZCBzcGFuIHtcbiAgZm9udC1mYW1pbHk6IFwiVGllbXBvc1JlZ3VsYXJcIjtcbn1cblxuLmhhaWt1X2Rlc2NyaXB0aW9uIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4uaGFpa3VfZGVzY3JpcHRpb24gLnN1YnRpdGxlIHtcbiAgYWxpZ24tc2VsZjogZmxleC1zdGFydDtcbiAgcGFkZGluZy1ib3R0b206IDUwcHg7XG59XG4uaGFpa3VfZGVzY3JpcHRpb24gLnN1YnRpdGxlIC50ZXh0IHtcbiAgcGFkZGluZy10b3A6IDUwcHg7XG59XG4uaGFpa3VfZGVzY3JpcHRpb24gLmRlc2NyaXB0aW9uIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiAgZ2FwOiA1MHB4O1xufVxuLmhhaWt1X2Rlc2NyaXB0aW9uIC50ZXh0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICBhbGlnbi1zZWxmOiBmbGV4LXN0YXJ0O1xuICBwYWRkaW5nLXRvcDogMjBweDtcbiAgZ2FwOiAyMHB4O1xufVxuLmhhaWt1X2Rlc2NyaXB0aW9uIC50ZXh0IC50ZXh0X2hhaWt1IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICBwYWRkaW5nLXRvcDogMjBweDtcbiAgZ2FwOiAxNXB4O1xufVxuLmhhaWt1X2Rlc2NyaXB0aW9uIC50ZXh0IC50ZXh0X2hhaWt1IHNwYW4ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbi5oYWlrdV9kZXNjcmlwdGlvbiAuaW1nX3dyYXBwZXIge1xuICB3aWR0aDogNjAlO1xuICBoZWlnaHQ6IDUwMHB4O1xufVxuLmhhaWt1X2Rlc2NyaXB0aW9uIC5pbWdfd3JhcHBlciBpbWcge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBvcGFjaXR5OiAwLjc7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG59XG5cbi5oaXN0b3J5IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xufVxuLmhpc3RvcnkgLnN1YnRpdGxlIHtcbiAgcGFkZGluZy1ib3R0b206IDUwcHg7XG59XG4uaGlzdG9yeSAuZGVzY3JpcHRpb24ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xuICBnYXA6IDUwcHg7XG59XG4uaGlzdG9yeSAuZGVzY3JpcHRpb24gLnRleHQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XG4gIHBhZGRpbmctdG9wOiAyMHB4O1xuICBnYXA6IDE1cHg7XG59XG4uaGlzdG9yeSAuZGVzY3JpcHRpb24gLnRleHQgLnRleHRfaGFpa3Uge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICBwYWRkaW5nLXRvcDogMjBweDtcbiAgZ2FwOiAyMHB4O1xufVxuLmhpc3RvcnkgLmRlc2NyaXB0aW9uIC50ZXh0IC50ZXh0X2hhaWt1IHNwYW4ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLndvcmR3aWRlIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4ud29yZHdpZGUgLnN1YnRpdGxlIHtcbiAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XG59XG4ud29yZHdpZGUgLmRlc2NyaXB0aW9uIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdy1yZXZlcnNlO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG4gIGdhcDogNTBweDtcbn1cbi53b3Jkd2lkZSAuZGVzY3JpcHRpb24gLnRleHQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICB0ZXh0LWFsaWduOiByaWdodDtcbiAgYWxpZ24tc2VsZjogZmxleC1zdGFydDtcbiAgcGFkZGluZy10b3A6IDIwcHg7XG4gIGdhcDogMTVweDtcbn1cbi53b3Jkd2lkZSAuZGVzY3JpcHRpb24gLnRleHQgLnRleHRfaGFpa3Uge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICBwYWRkaW5nLXRvcDogMjBweDtcbiAgZ2FwOiAyMHB4O1xufVxuLndvcmR3aWRlIC5kZXNjcmlwdGlvbiAudGV4dCAudGV4dF9oYWlrdSBzcGFuIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG4ud29yZHdpZGUgLmRlc2NyaXB0aW9uIC5pbWdfd3JhcHBlciB7XG4gIHdpZHRoOiA1MCU7XG4gIGhlaWdodDogNTAwcHg7XG59XG4ud29yZHdpZGUgLmRlc2NyaXB0aW9uIC5pbWdfd3JhcHBlciBpbWcge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBvcGFjaXR5OiAwLjY7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG59XG5cbi5oYWlrdXAge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbi5oYWlrdXAgLmRlc2NyaXB0aW9uIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdy1yZXZlcnNlO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG4gIGdhcDogNTBweDtcbn1cbi5oYWlrdXAgLmRlc2NyaXB0aW9uIC50ZXh0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmctdG9wOiAyMHB4O1xuICBnYXA6IDJyZW07XG59XG4uaGFpa3VwIC5kZXNjcmlwdGlvbiAudGV4dCAuZmlyc3RfdmVyc2Uge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbi5oYWlrdXAgLmRlc2NyaXB0aW9uIC50ZXh0IC5oYWlrdV90ZXh0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4uaGFpa3VwIC5kZXNjcmlwdGlvbiAudGV4dCAuaGFpa3VfdGV4dCBzcGFuIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5kZXRhaWxzX2NoaWxkIHtcbiAgICBnYXA6IDBweDtcbiAgfVxuICAuaGVyb19jb250YWluZXIgLmhlcm8gLnRpdGxlIGgxIHtcbiAgICBtYXJnaW4tYm90dG9tOiAtNXB4O1xuICB9XG4gIHNlY3Rpb24gLnN3aXBlci1zbGlkZS1jb250ZW50IHtcbiAgICBoZWlnaHQ6IDYwMHB4O1xuICB9XG4gIC5oYWlrdV9kZXNjcmlwdGlvbiB7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgfVxuICAuaGFpa3VfZGVzY3JpcHRpb24gLmRlc2NyaXB0aW9uIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW4tcmV2ZXJzZTtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB9XG4gIC5oYWlrdV9kZXNjcmlwdGlvbiAudGV4dCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBnYXA6IDEwcHg7XG4gIH1cbiAgLmhhaWt1X2Rlc2NyaXB0aW9uIC5pbWdfd3JhcHBlciB7XG4gICAgd2lkdGg6IDkwJTtcbiAgICBoZWlnaHQ6IDI1MHB4O1xuICB9XG4gIC5oaXN0b3J5IC5zdWJ0aXRsZSB7XG4gICAgcGFkZGluZy1ib3R0b206IDIwcHg7XG4gIH1cbiAgLmhpc3RvcnkgLmRlc2NyaXB0aW9uIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgfVxuICAuaGlzdG9yeSAuZGVzY3JpcHRpb24gLnRleHQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGdhcDogMTBweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbiAgLmhpc3RvcnkgLmRlc2NyaXB0aW9uIC50ZXh0IC50ZXh0X2hhaWt1IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gICAgZ2FwOiAxNXB4O1xuICB9XG4gIC53b3Jkd2lkZSAuc3VidGl0bGUge1xuICAgIHBhZGRpbmctYm90dG9tOiAyMHB4O1xuICAgIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XG4gIH1cbiAgLndvcmR3aWRlIC5kZXNjcmlwdGlvbiB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIH1cbiAgLndvcmR3aWRlIC5kZXNjcmlwdGlvbiAudGV4dCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGdhcDogMTBweDtcbiAgfVxuICAud29yZHdpZGUgLmRlc2NyaXB0aW9uIC50ZXh0IC50ZXh0X2hhaWt1IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gICAgZ2FwOiAxNXB4O1xuICB9XG4gIC53b3Jkd2lkZSAuZGVzY3JpcHRpb24gLmltZ193cmFwcGVyIHtcbiAgICB3aWR0aDogOTAlO1xuICAgIGhlaWdodDogMjUwcHg7XG4gIH1cbiAgLmhhaWt1cCB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG59XG4ubG9naW5fc2lnbnVwIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBtaW4td2lkdGg6IDEwMCU7XG4gIG1pbi1oZWlnaHQ6IDcwdmg7XG4gIGJhY2tncm91bmQ6ICNGQUY5Rjc7XG59XG4ubG9naW5fc2lnbnVwIC5jbG9zZV9idG4ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmctbGVmdDogNSU7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tdG9wOiA1MHB4O1xufVxuLmxvZ2luX3NpZ251cCAuY2xvc2VfYnRuIGEge1xuICBwYWRkaW5nLWxlZnQ6IDQzcHg7XG4gIGNvbG9yOiAjMUMxQjFGO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBlYXNlO1xufVxuLmxvZ2luX3NpZ251cCAuY2xvc2VfYnRuIGE6aG92ZXIge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTRweCk7XG59XG4ubG9naW5fc2lnbnVwIC5lbGVtZW50X2NvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luLWJvdHRvbTogNThweDtcbiAgbWFyZ2luLXRvcDogNDNweDtcbiAgZ2FwOiAzcHg7XG59XG4ubG9naW5fc2lnbnVwIC5lbGVtZW50X2NvbnRhaW5lciAudGl0bGVfZm9ybSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmb250LWZhbWlseTogXCJEbVNhbnNcIjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLmxvZ2luX3NpZ251cCAuZWxlbWVudF9jb250YWluZXIgLnRpdGxlX2Zvcm0gaDIge1xuICBmb250LXNpemU6IDMycHg7XG59XG4ubG9naW5fc2lnbnVwIGZvcm0ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG59XG4ubG9naW5fc2lnbnVwIGZvcm0gLmFsZXJ0IHtcbiAgbWFyZ2luLWJvdHRvbTogMnJlbTtcbn1cbi5sb2dpbl9zaWdudXAgZm9ybSBhIHtcbiAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XG4gIHBhZGRpbmctdG9wOiAzcHg7XG4gIGNvbG9yOiAjM0IzQjNCO1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBtYXJnaW4tdG9wOiA2cHg7XG4gIHRleHQtdW5kZXJsaW5lLW9mZnNldDogMnB4O1xuICB0cmFuc2l0aW9uOiAwLjNzIGVhc2U7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbi5sb2dpbl9zaWdudXAgZm9ybSBhOmhvdmVyIHtcbiAgY29sb3I6ICNCQUJBQkE7XG59XG4ubG9naW5fc2lnbnVwIGZvcm0gZGl2IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB3aWR0aDogMjgwcHg7XG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XG59XG4ubG9naW5fc2lnbnVwIGZvcm0gZGl2Om50aC1jaGlsZCgzKSB7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG4ubG9naW5fc2lnbnVwIGZvcm0gZGl2IGlucHV0IHtcbiAgYWxsOiB1bnNldDtcbiAgbWFyZ2luLXRvcDogNHB4O1xuICBib3JkZXI6IDFweCBzb2xpZCAjQkFCQUJBO1xuICBib3JkZXItcmFkaXVzOiAycHg7XG4gIGJveC1zaGFkb3c6IGluc2V0IDBweCAycHggNXB4IHJnYmEoMTg2LCAxODYsIDE4NiwgMC4zNSk7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nLWxlZnQ6IDVweDtcbiAgaGVpZ2h0OiAzMnB4O1xuICB0cmFuc2l0aW9uOiAwLjNzIGVhc2U7XG59XG4ubG9naW5fc2lnbnVwIGZvcm0gZGl2IGlucHV0OmZvY3VzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0YwRUVFNjtcbn1cbi5sb2dpbl9zaWdudXAgZm9ybSBkaXYgbGFiZWwsIC5sb2dpbl9zaWdudXAgZm9ybSBkaXYgdWwsIC5sb2dpbl9zaWdudXAgZm9ybSBkaXYgcCB7XG4gIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XG59XG4ubG9naW5fc2lnbnVwIGZvcm0gZGl2IGxhYmVsIHtcbiAgY29sb3I6ICMzQjNCM0I7XG4gIGZvbnQtZmFtaWx5OiBcIlRpZW1wb3NSZWd1bGFyXCI7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi1ib3R0b206IDJweDtcbn1cbi5sb2dpbl9zaWdudXAgZm9ybSBkaXYgcCB7XG4gIGZvbnQtZmFtaWx5OiBcIkRtU2Fuc1wiO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGNvbG9yOiAjM0IzQjNCO1xufVxuLmxvZ2luX3NpZ251cCBmb3JtIGRpdiBsaSB7XG4gIGxpc3Qtc3R5bGUtdHlwZTogZGlzYztcbiAgbWFyZ2luLWxlZnQ6IDFyZW07XG4gIGNvbG9yOiAjM0IzQjNCO1xuICBmb250LXNpemU6IDE0cHg7XG59XG4ubG9naW5fc2lnbnVwIGZvcm0gZGl2Omxhc3Qtb2YtdHlwZSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB3aWR0aDogMTA2cHg7XG4gIGhlaWdodDogMzBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0YwRUVFNjtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBib3gtc2hhZG93OiAtMC41cHggMXB4IDVweCByZ2JhKDAsIDAsIDAsIDAuMik7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNCQUJBQkE7XG4gIHRyYW5zaXRpb246IDAuM3MgZWFzZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuLmxvZ2luX3NpZ251cCBmb3JtIGRpdjpsYXN0LW9mLXR5cGU6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTNEQUNDO1xuICBib3gtc2hhZG93OiAwcHggMHB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMik7XG59XG4ubG9naW5fc2lnbnVwIGZvcm0gZGl2Omxhc3Qtb2YtdHlwZSBidXR0b24ge1xuICBhbGw6IHVuc2V0O1xuICBjb2xvcjogIzNCM0IzQjtcbiAgZm9udC1mYW1pbHk6IFwiRG1TYW5zXCI7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn1cbi5sb2dpbl9zaWdudXAgLmxvZ2luX2xpbmsge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luLXRvcDogNDBweDtcbiAgbWFyZ2luLWJvdHRvbTogNDBweDtcbiAgZ2FwOiA1cHg7XG4gIGNvbG9yOiAjM0IzQjNCO1xuICBmb250LXNpemU6IDE0cHg7XG59XG4ubG9naW5fc2lnbnVwIC5sb2dpbl9saW5rIGEge1xuICBjb2xvcjogIzNCM0IzQjtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIHRleHQtdW5kZXJsaW5lLW9mZnNldDogMnB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRyYW5zaXRpb246IDAuM3MgZWFzZTtcbn1cbi5sb2dpbl9zaWdudXAgLmxvZ2luX2xpbmsgYTpob3ZlciB7XG4gIGNvbG9yOiAjQkFCQUJBO1xufVxuLmxvZ2luX3NpZ251cCB0ZXh0YXJlYSB7XG4gIGFsbDogdW5zZXQ7XG4gIG1hcmdpbi10b3A6IDRweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI0JBQkFCQTtcbiAgYm9yZGVyLXJhZGl1czogMnB4O1xuICBib3gtc2hhZG93OiBpbnNldCAwcHggMnB4IDVweCByZ2JhKDE4NiwgMTg2LCAxODYsIDAuMzUpO1xuICB3aWR0aDogMTAwMHB4O1xuICBoZWlnaHQ6IDQwMHB4O1xuICBwYWRkaW5nLWxlZnQ6IDVweDtcbiAgcGFkZGluZy10b3A6IDVweDtcbiAgZm9udC1mYW1pbHk6IFwiRG1TYW5zXCI7XG4gIHRyYW5zaXRpb246IDAuM3MgZWFzZTtcbiAgd2hpdGUtc3BhY2U6IHByZS13cmFwO1xuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG59XG4ubG9naW5fc2lnbnVwIHRleHRhcmVhOmZvY3VzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0YwRUVFNjtcbn1cbi5sb2dpbl9zaWdudXAgdGV4dGFyZWE6OnBsYWNlaG9sZGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLmxvZ2luX3NpZ251cCAuZmlyc3RfcmVjdXBfcGFzc3dvcmQge1xuICBwYWRkaW5nLWJvdHRvbTogMHB4ICFpbXBvcnRhbnQ7XG59XG4ubG9naW5fc2lnbnVwIC5zZWNvbmRfcmVjdXBfcGFzc3dvcmQge1xuICBwYWRkaW5nLWJvdHRvbTogMzRweCAhaW1wb3J0YW50O1xufVxuLmxvZ2luX3NpZ251cCAuZXhwbGljYXRpb25fZm9ybSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB3aWR0aDogODAlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtZmFtaWx5OiBcIkRtU2Fuc1wiO1xuICBmb250LXNpemU6IDE0cHg7XG4gIG1hcmdpbi1ib3R0b206IDhweDtcbn1cbi5sb2dpbl9zaWdudXAgLndvcmRzX2NvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBib3JkZXI6IDFweCBzb2xpZCAjQkFCQUJBO1xuICBwYWRkaW5nOiAxNXB4O1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG4gIGdhcDogNXB4O1xuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xuICBjb2xvcjogIzNCM0IzQjtcbn1cbi5sb2dpbl9zaWdudXAgLndvcmRzX2NvbnRhaW5lciAud29yZHNfdGl0bGUge1xuICBmb250LWZhbWlseTogXCJEbVNhbnNcIjtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cbi5sb2dpbl9zaWdudXAgLndvcmRzX2NvbnRhaW5lciAud29yZCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiAgZ2FwOiAxMHB4O1xufVxuLmxvZ2luX3NpZ251cCAud29yZHNfY29udGFpbmVyIC53b3JkIHAge1xuICBmb250LWZhbWlseTogXCJUaWVtcG9zTWVkaXVtXCI7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMDBweCkge1xuICAubG9naW5fc2lnbnVwIHRleHRhcmVhIHtcbiAgICB3aWR0aDogNjAwcHg7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7XG4gIC5sb2dpbl9zaWdudXAgdGV4dGFyZWEge1xuICAgIHdpZHRoOiAyMDBweDtcbiAgfVxufVxuLnVzZXJfcHJvZmlsZSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuLnVzZXJfcHJvZmlsZSAubm9faGFpa3VzIHtcbiAgbWFyZ2luLWJvdHRvbTogMzBweDtcbn1cbi51c2VyX3Byb2ZpbGUgLmN0YV9kZXNjcmlwdGlvbiB7XG4gIHBhZGRpbmctbGVmdDogMTBweDtcbiAgcGFkZGluZy1yaWdodDogMTBweDtcbiAgbGluZS1oZWlnaHQ6IDMwcHg7XG4gIG1hcmdpbi10b3A6IDUwcHg7XG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XG4gIGhlaWdodDogMzBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0YwRUVFNjtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBib3gtc2hhZG93OiAtMC41cHggMXB4IDVweCByZ2JhKDAsIDAsIDAsIDAuMik7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNCQUJBQkE7XG4gIHRyYW5zaXRpb246IDAuM3MgZWFzZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuLnVzZXJfcHJvZmlsZSAuY3RhX2Rlc2NyaXB0aW9uOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0UzREFDQztcbiAgYm94LXNoYWRvdzogMHB4IDBweCAwcHggcmdiYSgwLCAwLCAwLCAwLjIpO1xufVxuLnVzZXJfcHJvZmlsZSAuY3RhX2Rlc2NyaXB0aW9uIGEge1xuICBjb2xvcjogIzNCM0IzQjtcbiAgZm9udC1mYW1pbHk6IFwiRG1TYW5zXCI7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn1cbi51c2VyX3Byb2ZpbGUgLmJhY2tncm91bmRfc2l6ZSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWluLWhlaWdodDogOTV2aDtcbn1cbi51c2VyX3Byb2ZpbGUgLnByb2ZpbGVfaGVybyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgbWFyZ2luLWJvdHRvbTogMzBweDtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmctdG9wOiA5MHB4O1xufVxuLnVzZXJfcHJvZmlsZSAucHJvZmlsZV9oZXJvIC5mb2xsb3cge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICBnYXA6IDIwcHg7XG4gIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xuICBwYWRkaW5nLXJpZ2h0OiAyMHB4O1xuICBmb250LWZhbWlseTogXCJEbVNhbnNcIjtcbiAgcGFkZGluZy10b3A6IDMwcHg7XG59XG4udXNlcl9wcm9maWxlIC5wcm9maWxlX2hlcm8gLmZvbGxvdyBidXR0b24ge1xuICBhbGw6IHVuc2V0O1xuICBib3JkZXI6IDFweCBzb2xpZCAjQkFCQUJBO1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG4gIHBhZGRpbmc6IDVweCAxMHB4O1xuICBjb2xvcjogIzNCM0IzQjtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0cmFuc2l0aW9uOiAwLjNzIGVhc2U7XG59XG4udXNlcl9wcm9maWxlIC5wcm9maWxlX2hlcm8gLmZvbGxvdyBidXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjBFRUU2O1xufVxuLnVzZXJfcHJvZmlsZSAucHJvZmlsZV9oZXJvIC5mb2xsb3cgcCB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgY29sb3I6ICNCQUJBQkE7XG59XG4udXNlcl9wcm9maWxlIC5wcm9maWxlX2hlcm8gLnRpdGxlX3Byb2ZpbGUge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIHBhZGRpbmctbGVmdDogMjBweDtcbiAgd2lkdGg6IDEwMCU7XG59XG4udXNlcl9wcm9maWxlIC5wcm9maWxlX2hlcm8gLmRlc2NyaXB0aW9uIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBnYXA6IDE1cHg7XG4gIG1hcmdpbi10b3A6IDE1cHg7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gIHdpZHRoOiA2MCU7XG4gIGZvbnQtZmFtaWx5OiBcIkRtU2Fuc1wiO1xufVxuLnVzZXJfcHJvZmlsZSAucHJvZmlsZV9oZXJvIC5kZXNjcmlwdGlvbiBhIHtcbiAgYWxpZ24tc2VsZjogZmxleC1zdGFydDtcbiAgbWFyZ2luLXRvcDogLTIwcHg7XG4gIGNvbG9yOiAjM0IzQjNCO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4udXNlcl9wcm9maWxlIC51c2VyX2hhaWt1IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6ICNFM0RBQ0M7XG4gIG1pbi13aWR0aDogODUwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBtYXJnaW4tYm90dG9tOiA1MHB4O1xufVxuLnVzZXJfcHJvZmlsZSAudXNlcl9oYWlrdSAudGl0bGUge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGZvbnQtZmFtaWx5OiBcIkRtU2Fuc1wiO1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuLnVzZXJfcHJvZmlsZSAudXNlcl9oYWlrdSAudGl0bGUgaDIge1xuICBmb250LXNpemU6IDMycHg7XG4gIHBhZGRpbmctbGVmdDogMTBweDtcbn1cbi51c2VyX3Byb2ZpbGUgLnVzZXJfaGFpa3UgLnRpdGxlIHAge1xuICBmb250LXNpemU6IDE0cHg7XG4gIGNvbG9yOiAjM0IzQjNCO1xuICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xufVxuLnVzZXJfcHJvZmlsZSAudXNlcl9oYWlrdSAuaGFpa3Uge1xuICBqdXN0aWZ5LXNlbGY6IGNlbnRlcjtcbiAgbWFyZ2luLWJvdHRvbTogMHB4O1xufVxuLnVzZXJfcHJvZmlsZSAudXNlcl9oYWlrdSAuaGFpa3U6bnRoLWNoaWxkKDMpIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAxO1xufVxuLnVzZXJfcHJvZmlsZSAudXNlcl9oYWlrdSAuaGFpa3U6bnRoLWNoaWxkKDMpOjpiZWZvcmUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICBjb250ZW50OiBcIlwiO1xuICBpbnNldDogMTBweDtcbiAgYm9yZGVyLXJhZGl1czogaW5oZXJpdDtcbiAgei1pbmRleDogMjtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYSgyNDAsIDIzOCwgMjMwLCAwKSAwJSwgcmdiYSgyNDAsIDIzOCwgMjMwLCAwLjcpIDEwMCUpO1xufVxuLnVzZXJfcHJvZmlsZSAudXNlcl9oYWlrdSAuaGFpa3U6bnRoLWNoaWxkKDQpIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAxO1xufVxuLnVzZXJfcHJvZmlsZSAudXNlcl9oYWlrdSAuaGFpa3U6bnRoLWNoaWxkKDQpOjpiZWZvcmUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICBjb250ZW50OiBcIlwiO1xuICBpbnNldDogMTBweDtcbiAgYm9yZGVyLXJhZGl1czogaW5oZXJpdDtcbiAgei1pbmRleDogMjtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYSgyNDAsIDIzOCwgMjMwLCAwLjUpIDAlLCByZ2IoMjQwLCAyMzgsIDIzMCkgMTAwJSk7XG59XG4udXNlcl9wcm9maWxlIC51c2VyX2hhaWt1IC5jdGEge1xuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xufVxuLnVzZXJfcHJvZmlsZSAudXNlcl9oYWlrdSAuY3RhOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZBRjlGNztcbn1cbi51c2VyX3Byb2ZpbGUgLnVzZXJfbGlrZXMge1xuICBtYXJnaW4tYm90dG9tOiA1MHB4O1xufVxuLnVzZXJfcHJvZmlsZSAudXNlcl9saWtlcyAudGl0bGUge1xuICBmb250LWZhbWlseTogXCJEbVNhbnNcIjtcbn1cbi51c2VyX3Byb2ZpbGUgLnVzZXJfbGlrZXMgLnRpdGxlIGgyIHtcbiAgZm9udC1zaXplOiAzMnB4O1xuICBwYWRkaW5nLWxlZnQ6IDEwcHg7XG59XG5cbi5ub3RpZmljYXRpb25zIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4ubm90aWZpY2F0aW9ucyAubm90aWZpY2F0aW9uX2NhcmQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjM0IzQjNCO1xufVxuXG4uZmVlZCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgbWluLWhlaWdodDogOTB2aDtcbn1cbi5mZWVkIC5iYWNrZ3JvdW5kX3NpemUge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcGFkZGluZy1sZWZ0OiAxMCU7XG4gIHBhZGRpbmctcmlnaHQ6IDEwJTtcbn1cbi5mZWVkIC5mZWVkX3RpdGxlIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICBhbGlnbi1zZWxmOiBmbGV4LXN0YXJ0O1xuICBtYXJnaW4tdG9wOiAxMGVtO1xuICBtYXJnaW4tYm90dG9tOiA2MHB4O1xufSIsIkBtaXhpbiBmbGV4ICgkZGlyZWN0aW9uOiByb3csICRqdXN0aWZ5OiBjZW50ZXIsICRhbGlnbjogY2VudGVyKSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogJGRpcmVjdGlvbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6ICRqdXN0aWZ5O1xuICAgIGFsaWduLWl0ZW1zOiAkYWxpZ247XG59XG5cbiIsIi8vIENvbG9yc1xuJHByaW1hcnk6ICNGQUY5Rjc7XG4kc2Vjb25kYXJ5TGlnaHQ6ICNGMEVFRTY7XG4kc2Vjb25kYXJ5RGFyazogI0UzREFDQztcbiRjb21wbGVtZW50YXJ5OiAjQjlEQUU2O1xuJGFjY2VudDogI0Y4QzhDODtcbiRncmF5VGV4dDogI0JBQkFCQTtcbiRncmF5RGFya1RleHQ6ICMzQjNCM0I7XG4kY2xvc2VCdG46ICMxQzFCMUY7XG4kbG9nb3V0QnRuOiAjRTZBOUE0O1xuXG4vLyBGb250cyBmYW1pbGllc1xuJHRpZW1wb3MtcmVndWxhcjogJ1RpZW1wb3NSZWd1bGFyJztcbiR0aWVtcG9zLW1lZGl1bTogJ1RpZW1wb3NNZWRpdW0nO1xuJGRtLXJlZ3VsYXI6ICdEbVNhbnMnO1xuXG5cbi8vIEZvbnQgc2l6ZXMgKG1vYmlsZSlcbiRtb2JpbGUtaDE6IDcwcHg7XG4kbW9iaWxlLWgyOiAyOHB4O1xuJG1vYmlsZS1oMzogMjRweDtcbiRtb2JpbGUtaDQ6IDIwcHg7XG4kbW9iaWxlLWg1OiAyOHB4O1xuJG1vYmlsZS1ib2R5MjogMThweDtcbiRtb2JpbGUtYm9keTM6IDExcHg7XG4kbW9iaWxlLWJ1dHRvbjogMTRweDtcbiRtb2JpbGUtY2FwdGlvbjogMTJweDtcblxuLy8gRm9udCBzaXplcyAoZGVza3RvcClcbiRkZXNrdG9wLWgxOiAxMTBweDtcbiRkZXNrdG9wLWgyOiAzNnB4O1xuJGRlc2t0b3AtaDM6IDMycHg7XG4kZGVza3RvcC1oNDogMjRweDtcbiRkZXNrdG9wLWg1OiAyNHB4O1xuJGRlc2t0b3AtYm9keTI6IDIwcHg7XG4kZGVza3RvcC1ib2R5MzogMTRweDtcbiRkZXNrdG9wLWJ1dHRvbjogMTZweDtcbiRkZXNrdG9wLWNhcHRpb246IDE2cHhcblxuLy8gRm9udCBzaXplcyAoZGVza3RvcCkgLT4gw6AgZMOpZmluaXJcbi8vICRkZXNrdG9wLWgxOiAzNnB4O1xuLy8gJGRlc2t0b3AtaDI6IDI4cHg7XG4vLyAkZGVza3RvcC1oMzogMjRweDtcbi8vICRkZXNrdG9wLWg0OiAyMHB4O1xuLy8gJGRlc2t0b3AtaDU6IDI4cHg7XG5cblxuXG4gIiwiQHVzZSBcIi4uL2Fic3RyYWN0L21peGluXCI7XG5AdXNlIFwiLi4vYWJzdHJhY3QvdmFyaWFibGVzXCIgYXMgdmFyO1xuXG4vLyBnw6luw6lyYWwgc2V0dXBcbioge1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG5ib2R5IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIuJHByaW1hcnk7XG5cbiAgICBoMSB7XG4gICAgICAgIGZvbnQtZmFtaWx5OiB2YXIuJHRpZW1wb3MtbWVkaXVtO1xuICAgICAgICBmb250LXNpemU6IHZhci4kZGVza3RvcC1oMTtcbiAgICB9XG4gICAgXG4gICAgaDIge1xuICAgICAgICBmb250LXNpemU6IHZhci4kZGVza3RvcC1oMztcbiAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICB9XG5cbiAgICBwIHtcbiAgICAgICAgY29sb3I6IHZhci4kZ3JheURhcmtUZXh0O1xuICAgIH1cbn1cblxuLm1heC13LXNpdGUge1xuICAgIG1heC13aWR0aDogMTQ0MHB4O1xufVxuXG4uY3RhIHtcbiAgICBAaW5jbHVkZSBtaXhpbi5mbGV4O1xuICAgIHBhZGRpbmctbGVmdDogMjBweDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAyMHB4O1xuICAgIGhlaWdodDogMzBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIuJHNlY29uZGFyeUxpZ2h0O1xuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICBtYXJnaW4tYm90dG9tOiA2MHB4O1xuICAgIGJveC1zaGFkb3c6IC0wLjVweCAxcHggNXB4IHJnYmEoMCwgMCwgMCwgMC4yMCk7XG4gICAgYm9yZGVyOiAxcHggc29saWQgdmFyLiRncmF5VGV4dDtcbiAgICB0cmFuc2l0aW9uOiAuM3MgZWFzZTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG5cbiAgICAmOmhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyLiRzZWNvbmRhcnlEYXJrO1xuICAgICAgICBib3gtc2hhZG93OiAwcHggMHB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMjApO1xuICAgIH1cbiAgICBcbiAgICBhIHtcbiAgICAgICAgY29sb3I6IHZhci4kZ3JheURhcmtUZXh0O1xuICAgICAgICBmb250LWZhbWlseTogdmFyLiRkbS1yZWd1bGFyO1xuICAgICAgICBmb250LXNpemU6IHZhci4kZGVza3RvcC1idXR0b247XG4gICAgfVxufVxuXG4uaGFpa3Uge1xuICAgIHdpZHRoOiA3ODNweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIuJHNlY29uZGFyeURhcms7XG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICBzcGFuIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgIHRvcDogMTJweDtcbiAgICAgICAgcmlnaHQ6IDEycHg7XG4gICAgICAgIGNvbG9yOiB2YXIuJGdyYXlEYXJrVGV4dDtcbiAgICB9XG5cbiAgICAuY3JlYXRvciB7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAxMnB4O1xuICAgICAgICBmb250LWZhbWlseTogdmFyLiRkbS1yZWd1bGFyO1xuXG4gICAgICAgIHAge1xuICAgICAgICAgICAgZm9udC1zaXplOiB2YXIuJGRlc2t0b3AtYm9keTI7XG5cbiAgICAgICAgICAgIGEge1xuICAgICAgICAgICAgICAgIGNvbG9yOiB2YXIuJGdyYXlEYXJrVGV4dDtcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiAuM3MgZWFzZTtcblxuICAgICAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogdmFyLiRncmF5VGV4dDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAuY29udGVudCB7XG4gICAgICAgIEBpbmNsdWRlIG1peGluLmZsZXgoY29sdW1uLCBjZW50ZXIsIGZsZXgtc3RhcnQpO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIuJHByaW1hcnk7XG4gICAgICAgIGhlaWdodDogMTAwcHg7XG4gICAgICAgIHBhZGRpbmc6IDE1cHggMHB4IDE1cHggMjBweDtcbiAgICAgICAgZm9udC1mYW1pbHk6IHZhci4kdGllbXBvcy1yZWd1bGFyO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAzcHg7XG4gICAgICAgIGJveC1zaGFkb3c6IDBweCAzcHggNXB4IHJnYmEoMCwgMCwgMCwgMC4yNSk7XG5cbiAgICAgICAgcCB7XG4gICAgICAgICAgICBmb250LXNpemU6IHZhci4kZGVza3RvcC1ib2R5MjtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC5saWtlLWNvbW1lbnRzX2NvbnRhaW5lciB7XG4gICAgICAgIEBpbmNsdWRlIG1peGluLmZsZXgoJGp1c3RpZnk6IGZsZXgtZW5kKTtcbiAgICAgICAgbWFyZ2luLXRvcDogMjBweDtcblxuICAgICAgICAuY29tbWVudHMge1xuICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMTVweDtcbiAgICAgICAgfVxuICAgICAgICAubGlrZSB7XG4gICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAycHg7XG4gICAgICAgIH1cbiAgICAgICAgLm5icl9saWtlcyB7XG4gICAgICAgICAgICBmb250LWZhbWlseTogdmFyLiRkbS1yZWd1bGFyO1xuXG4gICAgICAgICAgICBwIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IHZhci4kZGVza3RvcC1ib2R5MztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuXG4vLyBHRVNUSU9OIERFUyBCT1VUT05TIENPTU1FTlRBSVJFUyArIExJS0VTIEVUIE1PREFMIENPTU1FTlRBSVJFU1xuXG4ubGlrZS1idXR0b24sIC5jb21tZW50LWJ1dHRvbiB7XG4gICAgYWxsOiB1bnNldDtcbn1cblxuLmxpa2UtaWNvbiB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGNvbG9yOiB2YXIuJGdyYXlEYXJrVGV4dDtcbn1cblxuLmNvbW1lbnQtaWNvbiB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG5cbi5jb21tZW50LW1vZGFsIHtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwwLDAsMC40KTtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgei1pbmRleDogMTAwMDtcbn1cblxuLm1vZGFsLWNvbnRlbnQge1xuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgIHBhZGRpbmc6IDJyZW07XG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgIG1heC13aWR0aDogNTAwcHg7XG4gICAgd2lkdGg6IDEwMCU7XG59XG5cbi5jbG9zZS1idXR0b24ge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBmbG9hdDogcmlnaHQ7XG4gICAgZm9udC1zaXplOiAxLjVyZW07XG59XG5cbi5jb21tZW50c19jb250YWluZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJlZDtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICBib2R5IHtcblxuICAgICAgICBoMSB7XG4gICAgICAgICAgICBmb250LXNpemU6IHZhci4kbW9iaWxlLWgxO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NTBweCkge1xuICAgIFxuICAgIGJvZHkge1xuICAgIFxuICAgICAgICBoMSB7XG4gICAgICAgIGZvbnQtc2l6ZTogM3JlbTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiIsIkB1c2UgXCIuLi9hYnN0cmFjdC9taXhpblwiO1xuQHVzZSBcIi4uL2Fic3RyYWN0L3ZhcmlhYmxlc1wiIGFzIHZhcjtcblxuZm9vdGVyIHtcbiAgICBAaW5jbHVkZSBtaXhpbi5mbGV4KCRqdXN0aWZ5OiBmbGV4LXN0YXJ0KTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIuJHNlY29uZGFyeURhcms7XG5cbiAgICAuY29udGFpbmVyIHtcbiAgICAgICAgQGluY2x1ZGUgbWl4aW4uZmxleCgkanVzdGlmeTogZmxleC1zdGFydCk7XG4gICAgICAgIG1hcmdpbi10b3A6IDUwcHg7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDUwcHg7XG4gICAgICAgIGdhcDogMTc0cHg7XG4gICAgfVxuXG4gICAgLmxvZ29fd3JhcHBlciB7XG4gICAgICAgIHdpZHRoOiAxNTBweDtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiA2MHB4O1xuXG4gICAgICAgIGltZyB7XG4gICAgICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLmZvb3Rlcl9uYXYge1xuICAgICAgICBAaW5jbHVkZSBtaXhpbi5mbGV4O1xuICAgICAgICBcbiAgICAgICAgbmF2IHtcbiAgICAgICAgICAgIEBpbmNsdWRlIG1peGluLmZsZXgoY29sdW1uLCBjZW50ZXIsIGZsZXgtc3RhcnQpO1xuICAgICAgICAgICAgZ2FwOiAyMHB4O1xuICAgICAgICAgICAgZm9udC1mYW1pbHk6IHZhci4kZG0tcmVndWxhcjtcblxuICAgICAgICAgICAgYSB7XG4gICAgICAgICAgICAgICAgY29sb3I6IHZhci4kZ3JheURhcmtUZXh0O1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogdmFyLiRkZXNrdG9wLWJvZHkzO1xuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IC4zcyBlYXNlO1xuXG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICBmb290ZXIge1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcblxuICAgICAgICAuY29udGFpbmVyIHtcbiAgICAgICAgICAgIEBpbmNsdWRlIG1peGluLmZsZXgoY29sdW1uLCBjZW50ZXIsIGNlbnRlcik7XG4gICAgICAgICAgICBnYXA6IDYwcHg7XG4gICAgICAgIH1cblxuICAgICAgICAubG9nb193cmFwcGVyIHtcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMHB4O1xuICAgICAgICB9XG5cbiAgICAgICAgLmZvb3Rlcl9uYXYge1xuXG4gICAgICAgICAgICBuYXYge1xuICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59IiwiQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdUaWVtcG9zUmVndWxhcic7XG4gICAgc3JjOiB1cmwoJy4uLy4uL2ZvbnQvVGllbXBvc0ZpbmUtUmVndWxhci53b2ZmMicpO1xuICAgIGZvbnQtd2VpZ2h0OiAyMDA7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ1RpZW1wb3NNZWRpdW0nO1xuICAgIHNyYzogdXJsKCcuLi8uLi9mb250L1RpZW1wb3NGaW5lLU1lZGl1bS53b2ZmMicpO1xuICAgIGZvbnQtd2VpZ2h0OiA4MDA7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG4vLyBAZm9udC1mYWNlIHtcbi8vICAgICBmb250LWZhbWlseTogJ0RtUmVndWxhcic7XG4vLyAgICAgc3JjOiB1cmwoJy4uLy4uL2ZvbnQvRE1TYW5zXzE4cHQtUmVndWxhci53b2ZmMicpO1xuLy8gICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4vLyAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuLy8gfVxuXG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ0RtU2Fucyc7XG4gICAgc3JjOiB1cmwoJy4uLy4uL2ZvbnQvRE1TYW5zLVZhcmlhYmxlRm9udF9vcHN6XFwsd2dodC50dGYnKTtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG59IiwiQHVzZSBcIi4uL2Fic3RyYWN0L21peGluXCI7XG5AdXNlIFwiLi4vYWJzdHJhY3QvZm9udFwiO1xuQHVzZSBcIi4uL2Fic3RyYWN0L3ZhcmlhYmxlc1wiIGFzIHZhcjtcblxuLy8gSEVST1xuXG4uaGVyb19jb250YWluZXIge1xuICAgIEBpbmNsdWRlIG1peGluLmZsZXg7XG4gICAgd2lkdGg6IDEwMCU7XG5cbiAgICAuaGVybyB7XG4gICAgICAgIEBpbmNsdWRlIG1peGluLmZsZXgoY29sdW1uLCBjZW50ZXIsIGZsZXgtc3RhcnQpO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiAyNTBweDtcblxuICAgICAgICAudGl0bGUge1xuICAgICAgICAgICAgQGluY2x1ZGUgbWl4aW4uZmxleChjb2x1bW4sIGNlbnRlciwgY2VudGVyKTtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuXG4gICAgICAgICAgICBoMSB7XG4gICAgICAgICAgICAgICAgLy8gcGFkZGluZy1sZWZ0OiA0NXB4O1xuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTUlKTtcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAtMTVweDtcbiAgICAgICAgICAgIH1cbiBcbiAgICAgICAgICAgIGgzIHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDEwMHB4O1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogdmFyLiRkZXNrdG9wLWg0O1xuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgIH1cbn1cblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vIENPTkNFUFRcbnNlY3Rpb24ge1xuICAgIEBpbmNsdWRlIG1peGluLmZsZXgoY29sdW1uLCBjZW50ZXIsIGNlbnRlcik7XG4gICAgd2lkdGg6IDEwMCU7XG5cbiAgICAudGl0bGUge1xuICAgICAgICAvLyBwb3VyIGlzbyBtYXF1ZXR0ZTogcGFkZGluZyBkdSB0aXRyZSAtIHBhZGRpbmcgc3VyIGxhIHNlY3Rpb25cbiAgICAgICAgcGFkZGluZy10b3A6IDYwcHg7XG4gICAgICAgIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAyMnB4O1xuICAgICAgICBmb250LWZhbWlseTogdmFyLiRkbS1yZWd1bGFyO1xuICAgIH1cblxuICAgIC50aXRsZV9jb25jZXB0IHtcbiAgICAgICAgZm9udC1mYW1pbHk6IHZhci4kZG0tcmVndWxhcjtcbiAgICAgICAgYWxpZ24tc2VsZjogZmxleC1zdGFydDtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAzMHB4O1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgIH1cblxuXG4gICAgLnRleHRfY29uY2VwdCB7XG4gICAgICAgIGZvbnQtZmFtaWx5OiB2YXIuJGRtLXJlZ3VsYXI7XG5cbiAgICAgICAgcCB7XG4gICAgICAgICAgICBmb250LWZhbWlseTogdmFyLiRkbS1yZWd1bGFyO1xuICAgICAgICAgICAgZm9udC1zaXplOiB2YXIuJGRlc2t0b3AtYm9keTI7XG4gICAgICAgICAgICBmb250LXdlaWdodDogMzAwO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBzcGFuIHtcbiAgICAgICAgICAgICAgICBmb250LWZhbWlseTogdmFyLiR0aWVtcG9zLXJlZ3VsYXI7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiB2YXIuJGRlc2t0b3AtYm9keTI7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAuc3dpcGVyLXBhcmVudCB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBtYXgtd2lkdGg6IDE0NDBweDtcbiAgICAgICAgQGluY2x1ZGUgbWl4aW4uZmxleCgkZGlyZWN0aW9uOiBjb2x1bW4pO1xuXG4gICAgICAgIC5zd2lwZXItY29udGFpbmVyIHtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDQwcHg7XG4gICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLnN3aXBlci13cmFwcGVyIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgd2lkdGg6IGZ1bGw7XG4gICAgfVxuXG4gICAgLnN3aXBlci1zbGlkZSB7XG4gICAgICAgIEBpbmNsdWRlIG1peGluLmZsZXg7XG4gICAgfVxuXG4gICAgLnN3aXBlci1zbGlkZS1jb250ZW50IHtcbiAgICAgICAgQGluY2x1ZGUgbWl4aW4uZmxleChjb2x1bW4sIGNlbnRlciwgY2VudGVyKTtcbiAgICAgICAgdGV4dC1hbGlnbjoganVzdGlmeTtcbiAgICAgICAgcGFkZGluZzogMjBweDtcbiAgICAgICAgbWF4LXdpZHRoOiA0MDBweDtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMTBweDtcbiAgICAgICAgaGVpZ2h0OiA1NTBweDtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyLiRzZWNvbmRhcnlEYXJrO1xuICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICAgIGdhcDogMWVtO1xuXG4gICAgICAgIC50aXRsZV9jb250ZW50IHtcbiAgICAgICAgICAgIEBpbmNsdWRlIG1peGluLmZsZXgoY29sdW1uLCBmbGV4LXN0YXJ0LCBjZW50ZXIpO1xuICAgICAgICAgICAgZ2FwOiAyMHB4O1xuICAgICAgICB9XG5cbiAgICAgICAgLnRpdGxlX2NhcmQge1xuICAgICAgICAgICAgYWxpZ24tc2VsZjogZmxleC1zdGFydDtcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiB2YXIuJGRtLXJlZ3VsYXI7XG4gICAgICAgICAgICBmb250LXdlaWdodDogNzAwO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBoMyB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiB2YXIuJGRlc2t0b3AtaDQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAuaW1nX3dyYXBwZXIge1xuICAgICAgICAgICAgQGluY2x1ZGUgbWl4aW4uZmxleDsgLy8gdGVtcG9yYWlyZSBqdXN0ZSBwb3VyIGFmZmljaGVyIGltYWdlXG4gICAgICAgICAgICBoZWlnaHQ6IDMwMHB4O1xuICAgICAgICAgICAgd2lkdGg6IDMwMHB4O1xuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XG5cbiAgICAgICAgICAgIGltZyB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgICAgIG9wYWNpdHk6IC43NTtcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIHBhcmVudCByZWxhdGl2ZSA9IHN3aXBlci1jb250YWluZXJcbiAgICAuc3dpcGVyLXBhZ2luYXRpb24ge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0IHtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIuJGdyYXlUZXh0O1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxMHB4O1xuICAgICAgICAgICAgICAgIGhlaWdodDogMTBweDtcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAuNTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1hY3RpdmUge1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhci4kZ3JheURhcmtUZXh0O1xuICAgICAgICAgICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgICAgICB9XG4gICAgfVxuXG4gICAgLmN0YSB7XG4gICAgICAgIG1hcmdpbi10b3A6IDUwcHg7XG4gICAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAgICB9XG59XG5cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLyBIQUlLVVBfREVUQUlMXG4uYmFja2dyb3VuZCB7XG4gICAgQGluY2x1ZGUgbWl4aW4uZmxleChjb2x1bW4sIGNlbnRlciwgY2VudGVyKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIuJHNlY29uZGFyeUxpZ2h0O1xuICAgIHdpZHRoOiAxMDAlO1xufVxuLmhhaWt1X2RldGFpbHMge1xuXG4gICAgLmN0YSB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhci4kc2Vjb25kYXJ5RGFyaztcblxuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhci4kc2Vjb25kYXJ5TGlnaHQ7XG4gICAgICAgIH1cbiAgICB9XG59XG4uZGV0YWlsc19jaGlsZCB7XG4gICAgQGluY2x1ZGUgbWl4aW4uZmxleChjb2x1bW4sIGNlbnRlciwgY2VudGVyKTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxOHB4O1xuICAgIHBhZGRpbmctbGVmdDogMThweDtcbiAgICB3aWR0aDogOTAlO1xuICAgIGZvbnQtZmFtaWx5OiB2YXIuJGRtLXJlZ3VsYXI7XG4gICAgZm9udC1zaXplOiB2YXIuJGRlc2t0b3AtYm9keTI7XG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICBjb2xvcjogdmFyLiRncmF5RGFya1RleHQ7XG4gICAgZ2FwOiAyMnB4OyBcbiAgICBtYXJnaW4tYm90dG9tOiA0ZW07XG5cbiAgICAudGl0bGVfZGVzY3JpcHRpb24ge1xuICAgICAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gICAgICAgIG1hcmdpbi10b3A6IDYwcHg7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDQwcHg7XG4gICAgfVxuXG4gICAgc3BhbiB7XG4gICAgICAgIGZvbnQtZmFtaWx5OiB2YXIuJHRpZW1wb3MtcmVndWxhcjtcbiAgICB9XG4gICAgXG59XG5cbi5oYWlrdV9kZXNjcmlwdGlvbiB7XG4gICAgQGluY2x1ZGUgbWl4aW4uZmxleChjb2x1bW4sIGNlbnRlcixjZW50ZXIpO1xuXG4gICAgLnN1YnRpdGxlIHtcbiAgICAgICAgYWxpZ24tc2VsZjogZmxleC1zdGFydDtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDUwcHg7XG5cbiAgICAgICAgLnRleHQge1xuICAgICAgICAgICAgcGFkZGluZy10b3A6IDUwcHg7XG4gICAgICAgIH1cbiAgICB9XG5cblxuICAgIC5kZXNjcmlwdGlvbiB7XG4gICAgICAgIEBpbmNsdWRlIG1peGluLmZsZXgoJGp1c3RpZnk6IHNwYWNlLWJldHdlZW4pO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgZ2FwOiA1MHB4O1xuICAgIH1cbiAgICAudGV4dCB7XG4gICAgICAgIEBpbmNsdWRlIG1peGluLmZsZXgoY29sdW1uLCBjZW50ZXIsIGZsZXgtc3RhcnQpO1xuICAgICAgICBhbGlnbi1zZWxmOiBmbGV4LXN0YXJ0O1xuICAgICAgICBwYWRkaW5nLXRvcDogMjBweDtcbiAgICAgICAgZ2FwOiAyMHB4O1xuXG4gICAgICAgIC50ZXh0X2hhaWt1IHtcbiAgICAgICAgICAgIEBpbmNsdWRlIG1peGluLmZsZXgoY29sdW1uLCBjZW50ZXIsIGZsZXgtc3RhcnQpO1xuICAgICAgICAgICAgcGFkZGluZy10b3A6IDIwcHg7XG4gICAgICAgICAgICBnYXA6IDE1cHg7XG4gICAgICAgICAgICBzcGFuIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIC5pbWdfd3JhcHBlciB7XG4gICAgICAgIHdpZHRoOiA2MCU7XG4gICAgICAgIGhlaWdodDogNTAwcHg7XG5cbiAgICAgICAgaW1nIHtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgb3BhY2l0eTogLjc7XG4gICAgICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLmhpc3Rvcnkge1xuICAgIEBpbmNsdWRlIG1peGluLmZsZXgoY29sdW1uLCBjZW50ZXIsIGZsZXgtc3RhcnQpO1xuXG4gICAgLnN1YnRpdGxlIHtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDUwcHg7XG4gICAgfVxuXG4gICAgLmRlc2NyaXB0aW9uIHtcbiAgICAgICAgQGluY2x1ZGUgbWl4aW4uZmxleCgkanVzdGlmeTogZmxleC1zdGFydCk7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBnYXA6IDUwcHg7XG5cbiAgICAgICAgLnRleHQge1xuICAgICAgICAgICAgQGluY2x1ZGUgbWl4aW4uZmxleChjb2x1bW4sIGNlbnRlciwgZmxleC1zdGFydCk7XG4gICAgICAgICAgICBhbGlnbi1zZWxmOiBmbGV4LXN0YXJ0O1xuICAgICAgICAgICAgcGFkZGluZy10b3A6IDIwcHg7XG4gICAgICAgICAgICBnYXA6IDE1cHg7XG5cbiAgICAgICAgICAgIC50ZXh0X2hhaWt1IHtcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBtaXhpbi5mbGV4KGNvbHVtbiwgY2VudGVyLCBmbGV4LWVuZCk7XG4gICAgICAgICAgICAgICAgcGFkZGluZy10b3A6IDIwcHg7XG4gICAgICAgICAgICAgICAgZ2FwOiAyMHB4O1xuICAgICAgICAgICAgICAgIHNwYW4ge1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi53b3Jkd2lkZSB7XG4gICAgQGluY2x1ZGUgbWl4aW4uZmxleChjb2x1bW4sIGNlbnRlciwgY2VudGVyKTtcblxuICAgIC5zdWJ0aXRsZSB7XG4gICAgICAgIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xuICAgIH1cblxuICAgIC5kZXNjcmlwdGlvbiB7XG4gICAgICAgIEBpbmNsdWRlIG1peGluLmZsZXgoJGRpcmVjdGlvbjogcm93LXJldmVyc2UpO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgZ2FwOiA1MHB4O1xuXG5cbiAgICAgICAgLnRleHQge1xuICAgICAgICAgICAgQGluY2x1ZGUgbWl4aW4uZmxleChjb2x1bW4sIGNlbnRlciwgZmxleC1lbmQpO1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgICAgICAgICBhbGlnbi1zZWxmOiBmbGV4LXN0YXJ0O1xuICAgICAgICAgICAgcGFkZGluZy10b3A6IDIwcHg7XG4gICAgICAgICAgICBnYXA6IDE1cHg7XG4gICAgICAgICAgICAudGV4dF9oYWlrdSB7XG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgbWl4aW4uZmxleChjb2x1bW4sIGNlbnRlciwgZmxleC1lbmQpO1xuICAgICAgICAgICAgICAgIHBhZGRpbmctdG9wOiAyMHB4O1xuICAgICAgICAgICAgICAgIGdhcDogMjBweDtcbiAgICAgICAgICAgICAgICBzcGFuIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC5pbWdfd3JhcHBlciB7XG4gICAgICAgICAgICB3aWR0aDogNTAlO1xuICAgICAgICAgICAgaGVpZ2h0OiA1MDBweDtcbiAgICAgICAgICAgIGltZyB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgICAgIG9wYWNpdHk6IC42O1xuICAgICAgICAgICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuLmhhaWt1cCB7XG4gICAgQGluY2x1ZGUgbWl4aW4uZmxleChjb2x1bW4sIGNlbnRlciwgY2VudGVyKTtcblxuICAgIC5kZXNjcmlwdGlvbiB7XG4gICAgICAgIEBpbmNsdWRlIG1peGluLmZsZXgoJGRpcmVjdGlvbjogcm93LXJldmVyc2UpO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgZ2FwOiA1MHB4O1xuXG4gICAgICAgIC50ZXh0IHtcbiAgICAgICAgICAgIEBpbmNsdWRlIG1peGluLmZsZXgoY29sdW1uLCBjZW50ZXIsIGNlbnRlcik7XG4gICAgICAgICAgICBwYWRkaW5nLXRvcDogMjBweDtcbiAgICAgICAgICAgIGdhcDogMnJlbTtcblxuICAgICAgICAgICAgLmZpcnN0X3ZlcnNlIHtcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBtaXhpbi5mbGV4KGNvbHVtbiwgY2VudGVyLGNlbnRlcik7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC5oYWlrdV90ZXh0IHtcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBtaXhpbi5mbGV4KGNvbHVtbiwgY2VudGVyLCBjZW50ZXIpO1xuICAgICAgICAgICAgICAgIHNwYW4ge1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG5cbiAgICAuZGV0YWlsc19jaGlsZCB7XG4gICAgICAgIGdhcDogMHB4O1xuICAgIH1cblxuICAgIC5oZXJvX2NvbnRhaW5lciB7XG4gICAgICAgIC5oZXJvIHtcbiAgICAgICAgICAgIC50aXRsZSB7XG4gICAgICAgICAgICAgICAgaDEge1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAtNXB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHNlY3Rpb24ge1xuICAgICAgICAuc3dpcGVyLXNsaWRlLWNvbnRlbnQge1xuICAgICAgICAgICAgaGVpZ2h0OiA2MDBweDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAuaGFpa3VfZGVzY3JpcHRpb24ge1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG5cbiAgICAgICAgLmRlc2NyaXB0aW9uIHtcbiAgICAgICAgICAgIEBpbmNsdWRlIG1peGluLmZsZXgoY29sdW1uLXJldmVyc2UsIGNlbnRlciwgY2VudGVyKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC50ZXh0IHtcbiAgICAgICAgICAgIEBpbmNsdWRlIG1peGluLmZsZXgoY29sdW1uLCBjZW50ZXIsIGNlbnRlcik7XG4gICAgICAgICAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICBnYXA6IDEwcHg7XG4gICAgICAgIH1cblxuICAgICAgICAuaW1nX3dyYXBwZXIge1xuICAgICAgICAgICAgd2lkdGg6IDkwJTtcbiAgICAgICAgICAgIGhlaWdodDogMjUwcHg7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAuaGlzdG9yeSB7XG5cbiAgICAgICAgLnN1YnRpdGxlIHtcbiAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAyMHB4O1xuICAgICAgICB9XG5cbiAgICAgICAgLmRlc2NyaXB0aW9uIHtcbiAgICAgICAgICAgIEBpbmNsdWRlIG1peGluLmZsZXgoY29sdW1uLCBjZW50ZXIsIGNlbnRlcik7XG5cbiAgICAgICAgICAgIC50ZXh0IHtcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBtaXhpbi5mbGV4KGNvbHVtbiwgY2VudGVyLCBjZW50ZXIpO1xuICAgICAgICAgICAgICAgIGdhcDogMTBweDtcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICAgICAgICAgICAgICAudGV4dF9oYWlrdSB7XG4gICAgICAgICAgICAgICAgICAgIEBpbmNsdWRlIG1peGluLmZsZXgoY29sdW1uLCBjZW50ZXIsIGZsZXgtc3RhcnQpO1xuICAgICAgICAgICAgICAgICAgICBnYXA6IDE1cHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLndvcmR3aWRlIHtcblxuICAgICAgICAuc3VidGl0bGUge1xuICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDIwcHg7XG4gICAgICAgICAgICBhbGlnbi1zZWxmOiBmbGV4LXN0YXJ0O1xuICAgICAgICB9XG5cbiAgICAgICAgLmRlc2NyaXB0aW9uIHtcbiAgICAgICAgICAgIEBpbmNsdWRlIG1peGluLmZsZXgoY29sdW1uLCBjZW50ZXIsIGNlbnRlcik7XG5cbiAgICAgICAgICAgIC50ZXh0IHtcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBtaXhpbi5mbGV4KGNvbHVtbiwgY2VudGVyLCBjZW50ZXIpO1xuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgICAgICBnYXA6IDEwcHg7XG5cbiAgICAgICAgICAgICAgICAudGV4dF9oYWlrdSB7XG4gICAgICAgICAgICAgICAgICAgIEBpbmNsdWRlIG1peGluLmZsZXgoY29sdW1uLCBjZW50ZXIsIGZsZXgtc3RhcnQpO1xuICAgICAgICAgICAgICAgICAgICBnYXA6IDE1cHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAuaW1nX3dyYXBwZXIge1xuICAgICAgICAgICAgICAgIHdpZHRoOiA5MCU7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAyNTBweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIC5oYWlrdXAge1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgfVxufVxuIiwiQHVzZSBcIi4uL2Fic3RyYWN0L21peGluXCI7XG5AdXNlIFwiLi4vYWJzdHJhY3QvZm9udFwiO1xuQHVzZSBcIi4uL2Fic3RyYWN0L3ZhcmlhYmxlc1wiIGFzIHZhcjtcblxuLmxvZ2luX3NpZ251cCB7XG4gICAgQGluY2x1ZGUgbWl4aW4uZmxleChjb2x1bW4sIGZsZXgtc3RhcnQsIGNlbnRlcik7XG4gICAgbWluLXdpZHRoOiAxMDAlO1xuICAgIG1pbi1oZWlnaHQ6IDcwdmg7XG4gICAgYmFja2dyb3VuZDogdmFyLiRwcmltYXJ5O1xuXG4gICAgLmNsb3NlX2J0biB7XG4gICAgICAgIEBpbmNsdWRlIG1peGluLmZsZXgoJGp1c3RpZnk6IGZsZXgtc3RhcnQpO1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDUlO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgbWFyZ2luLXRvcDogNTBweDtcblxuICAgICAgICBhIHtcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogNDNweDtcbiAgICAgICAgICAgIGNvbG9yOiB2YXIuJGNsb3NlQnRuO1xuICAgICAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC4zcyBlYXNlO1xuXG4gICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTRweCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAuZWxlbWVudF9jb250YWluZXIge1xuICAgICAgICBAaW5jbHVkZSBtaXhpbi5mbGV4KGNvbHVtbiwgY2VudGVyLCBjZW50ZXIpO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNThweDtcbiAgICAgICAgbWFyZ2luLXRvcDogNDNweDtcbiAgICAgICAgZ2FwOiAzcHg7XG5cbiAgICAgICAgLnRpdGxlX2Zvcm0ge1xuICAgICAgICAgICAgQGluY2x1ZGUgbWl4aW4uZmxleDtcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiB2YXIuJGRtLXJlZ3VsYXI7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICAgICAgICAgIGgyIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IHZhci4kZGVza3RvcC1oMztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFBvdXIgbCdpbnN0YW50IHN1cHByaW3DqSB2b2lyIHNpIG9uIHkgcmV2aWVudFxuICAgICAgICAvLyAuc3VidGl0bGVfZm9ybSB7XG4gICAgICAgIC8vICAgICBAaW5jbHVkZSBtaXhpbi5mbGV4O1xuICAgICAgICAvLyAgICAgZm9udC1mYW1pbHk6IHZhci4kZG0tcmVndWxhcjtcbiAgICAgICAgLy8gICAgIHdpZHRoOiAxMDAlO1xuXG4gICAgICAgIC8vICAgICBwIHtcbiAgICAgICAgLy8gICAgICAgICBmb250LXNpemU6IHZhci4kbW9iaWxlLWg0O1xuICAgICAgICAvLyAgICAgfVxuICAgICAgICAvLyB9XG4gICAgfVxuXG4gICAgLy8gRk9STVVMQUlSRVxuICAgIGZvcm0ge1xuICAgICAgICBAaW5jbHVkZSBtaXhpbi5mbGV4KGNvbHVtbiwgY2VudGVyLCBjZW50ZXIpO1xuICAgICAgICB3aWR0aDogMTAwJTtcblxuICAgICAgICAuYWxlcnQge1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMnJlbTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGFsaWduZW1lbnQgZHUgXCJtb3QgZGUgcGFzc2Ugb3VibGnDqVwiXG4gICAgICAgIGEge1xuICAgICAgICAgICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XG4gICAgICAgICAgICBwYWRkaW5nLXRvcDogM3B4O1xuICAgICAgICAgICAgY29sb3I6IHZhci4kZ3JheURhcmtUZXh0O1xuICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgICAgICAgICBmb250LXNpemU6IHZhci4kZGVza3RvcC1ib2R5MztcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDZweDtcbiAgICAgICAgICAgIHRleHQtdW5kZXJsaW5lLW9mZnNldDogMnB4O1xuICAgICAgICAgICAgdHJhbnNpdGlvbjogLjNzIGVhc2U7XG4gICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG5cbiAgICAgICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHZhci4kZ3JheVRleHQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZGl2IHtcbiAgICAgICAgICAgIEBpbmNsdWRlIG1peGluLmZsZXgoY29sdW1uLCBmbGV4LXN0YXJ0LCBjZW50ZXIpO1xuICAgICAgICAgICAgd2lkdGg6IDI4MHB4O1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMzBweDtcblxuICAgICAgICAgICAgJjpudGgtY2hpbGQoMykge1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlucHV0IHtcbiAgICAgICAgICAgICAgICBhbGw6IHVuc2V0O1xuICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDRweDtcbiAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCB2YXIuJGdyYXlUZXh0O1xuICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgICAgICAgICAgICAgICBib3gtc2hhZG93OiBpbnNldCAwcHggMnB4IDVweCByZ2JhKHZhci4kZ3JheVRleHQsIDM1JSk7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiA1cHg7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAzMnB4O1xuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IC4zcyBlYXNlO1xuXG4gICAgICAgICAgICAgICAgJjpmb2N1cyB7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhci4kc2Vjb25kYXJ5TGlnaHQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBsYWJlbCwgdWwsIHAge1xuICAgICAgICAgICAgICAgIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGxhYmVsIHtcbiAgICAgICAgICAgICAgICBjb2xvcjogdmFyLiRncmF5RGFya1RleHQ7XG4gICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6IHZhci4kdGllbXBvcy1yZWd1bGFyO1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogdmFyLiRkZXNrdG9wLWNhcHRpb247XG4gICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7IC8vIGZpeCBsZSBtb3V2ZW1lbnQgZHUgY2hhbmdlbWVudCBkZSBib3JkZXIgc3VyIGwnaW5wdXQgcXVhbmQgb24gaG92ZXJcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAycHg7XG5cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcCB7XG4gICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6IHZhci4kZG0tcmVndWxhcjtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IHZhci4kZGVza3RvcC1ib2R5MztcbiAgICAgICAgICAgICAgICBjb2xvcjogdmFyLiRncmF5RGFya1RleHQ7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGxpIHtcbiAgICAgICAgICAgICAgICAgICAgbGlzdC1zdHlsZS10eXBlOiBkaXNjO1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMXJlbTtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHZhci4kZ3JheURhcmtUZXh0O1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IHZhci4kZGVza3RvcC1ib2R5MztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBkaXY6bGFzdC1vZi10eXBlIHtcbiAgICAgICAgICAgIEBpbmNsdWRlIG1peGluLmZsZXg7XG4gICAgICAgICAgICB3aWR0aDogMTA2cHg7XG4gICAgICAgICAgICBoZWlnaHQ6IDMwcHg7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIuJHNlY29uZGFyeUxpZ2h0O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgICAgICAgICAgYm94LXNoYWRvdzogLTAuNXB4IDFweCA1cHggcmdiYSgwLCAwLCAwLCAwLjIwKTtcbiAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHZhci4kZ3JheVRleHQ7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiAuM3MgZWFzZTtcbiAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyLiRzZWNvbmRhcnlEYXJrO1xuICAgICAgICAgICAgICAgIGJveC1zaGFkb3c6IDBweCAwcHggMHB4IHJnYmEoMCwgMCwgMCwgMC4yMCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGJ1dHRvbiB7XG4gICAgICAgICAgICAgICAgYWxsOiB1bnNldDtcbiAgICAgICAgICAgICAgICBjb2xvcjogdmFyLiRncmF5RGFya1RleHQ7XG4gICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6IHZhci4kZG0tcmVndWxhcjtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IHZhci4kZGVza3RvcC1idXR0b247XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gTElFTiBWRVJTIENPTk5FWElPTlxuICAgIC5sb2dpbl9saW5rIHtcbiAgICAgICAgQGluY2x1ZGUgbWl4aW4uZmxleDtcbiAgICAgICAgbWFyZ2luLXRvcDogNDBweDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNDBweDtcbiAgICAgICAgZ2FwOiA1cHg7XG4gICAgICAgIGNvbG9yOiB2YXIuJGdyYXlEYXJrVGV4dDtcbiAgICAgICAgZm9udC1zaXplOiB2YXIuJGRlc2t0b3AtYm9keTM7XG5cbiAgICAgICAgYSB7XG4gICAgICAgICAgICBjb2xvcjogdmFyLiRncmF5RGFya1RleHQ7XG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICAgICAgICAgIHRleHQtdW5kZXJsaW5lLW9mZnNldDogMnB4O1xuICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAgICAgdHJhbnNpdGlvbjogLjNzIGVhc2U7XG5cbiAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgIGNvbG9yOiB2YXIuJGdyYXlUZXh0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gU3DDqWNpYWxlbWVudCBwb3VyIGxlIGZvcm11bGFpcmUgZCdham91dCBkZSBkZXNjcmlwdGlvblxuICAgIHRleHRhcmVhIHsgXG4gICAgYWxsOiB1bnNldDtcbiAgICBtYXJnaW4tdG9wOiA0cHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgdmFyLiRncmF5VGV4dDtcbiAgICBib3JkZXItcmFkaXVzOiAycHg7XG4gICAgYm94LXNoYWRvdzogaW5zZXQgMHB4IDJweCA1cHggcmdiYSh2YXIuJGdyYXlUZXh0LCAzNSUpO1xuICAgIHdpZHRoOiAxMDAwcHg7XG4gICAgaGVpZ2h0OiA0MDBweDtcbiAgICBwYWRkaW5nLWxlZnQ6IDVweDtcbiAgICBwYWRkaW5nLXRvcDogNXB4O1xuICAgIGZvbnQtZmFtaWx5OiB2YXIuJGRtLXJlZ3VsYXI7XG4gICAgdHJhbnNpdGlvbjogLjNzIGVhc2U7IFxuICAgIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDsgLy8gRm9yY2UgbGUgcmV0b3VyIMOgIGxhIGxpZ25lIHF1YW5kIG7DqWNlc3NhaXJlXG4gICAgd29yZC13cmFwOiBicmVhay13b3JkOyAvLyBDb3VwZSBsZXMgbW90cyB0cm9wIGxvbmdzXG5cbiAgICAmOmZvY3VzIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyLiRzZWNvbmRhcnlMaWdodDtcbiAgICB9XG5cbiAgICAmOjpwbGFjZWhvbGRlciB7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB9XG59XG5cbi8vIFNww6ljaWFsZW1lbnQgcG91ciBsZSByZXNldCBkdSBwYXNzd29yZCBjYXIgdmlzdWVsIGRpZmbDqXJlbnQgOiBcbi8vIFVuIHBldSBwYXRjaCAtPiBcbi5maXJzdF9yZWN1cF9wYXNzd29yZCB7XG4gICAgcGFkZGluZy1ib3R0b206IDBweCAhaW1wb3J0YW50O1xufVxuXG4uc2Vjb25kX3JlY3VwX3Bhc3N3b3JkIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMzRweCAhaW1wb3J0YW50O1xufVxuLmV4cGxpY2F0aW9uX2Zvcm0ge1xuICAgIEBpbmNsdWRlIG1peGluLmZsZXg7XG4gICAgd2lkdGg6IDgwJTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgZm9udC1mYW1pbHk6IHZhci4kZG0tcmVndWxhcjtcbiAgICBmb250LXNpemU6IHZhci4kZGVza3RvcC1ib2R5MztcbiAgICBtYXJnaW4tYm90dG9tOiA4cHg7XG59XG5cbi8vIFBvdXIgbCdlbnZvaSBkdSBoYWlrdVxuLndvcmRzX2NvbnRhaW5lciB7XG4gICAgQGluY2x1ZGUgbWl4aW4uZmxleChjb2x1bW4sIGNlbnRlciwgY2VudGVyKTtcbiAgICBib3JkZXI6IDFweCBzb2xpZCB2YXIuJGdyYXlUZXh0O1xuICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgIGdhcDogNXB4O1xuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XG4gICAgY29sb3I6IHZhci4kZ3JheURhcmtUZXh0O1xuXG4gICAgLndvcmRzX3RpdGxlIHtcbiAgICAgICAgZm9udC1mYW1pbHk6IHZhci4kZG0tcmVndWxhcjtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICB9XG5cbiAgICAud29yZHtcbiAgICAgICAgQGluY2x1ZGUgbWl4aW4uZmxleChjb2x1bW4sIGNlbnRlciwgY2VudGVyKTtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGdhcDogMTBweDtcbiAgICAgICAgcCB7XG4gICAgICAgICAgICBmb250LWZhbWlseTogdmFyLiR0aWVtcG9zLW1lZGl1bTtcbiAgICAgICAgfVxuICAgIH0gXG59XG5cblxuXG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDAwcHgpIHtcblxuICAgIC5sb2dpbl9zaWdudXAge1xuICAgICAgICB0ZXh0YXJlYSB7XG4gICAgICAgIHdpZHRoOiA2MDBweDtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHtcblxuICAgIC5sb2dpbl9zaWdudXAge1xuICAgICAgICB0ZXh0YXJlYSB7XG4gICAgICAgIHdpZHRoOiAyMDBweDtcbiAgICAgICAgfVxuICAgIH1cbn0iLCJAdXNlIFwiLi4vYWJzdHJhY3QvbWl4aW5cIjtcbkB1c2UgXCIuLi9hYnN0cmFjdC9mb250XCI7XG5AdXNlIFwiLi4vYWJzdHJhY3QvdmFyaWFibGVzXCIgYXMgdmFyO1xuXG4udXNlcl9wcm9maWxlIHtcbiAgICBAaW5jbHVkZSBtaXhpbi5mbGV4KGNvbHVtbiwgY2VudGVyLCBjZW50ZXIpO1xuXG4gICAgICAgIC5ub19oYWlrdXMge1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMzBweDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5jdGFfZGVzY3JpcHRpb24ge1xuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xuICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMTBweDtcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAzMHB4O1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogNTBweDtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XG4gICAgICAgICAgICBoZWlnaHQ6IDMwcHg7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIuJHNlY29uZGFyeUxpZ2h0O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgICAgICAgICAgYm94LXNoYWRvdzogLTAuNXB4IDFweCA1cHggcmdiYSgwLCAwLCAwLCAwLjIwKTtcbiAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHZhci4kZ3JheVRleHQ7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiAuM3MgZWFzZTtcbiAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhci4kc2Vjb25kYXJ5RGFyaztcbiAgICAgICAgICAgICAgICBib3gtc2hhZG93OiAwcHggMHB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMjApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICBhIHtcbiAgICAgICAgICAgICAgICBjb2xvcjogdmFyLiRncmF5RGFya1RleHQ7XG4gICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6IHZhci4kZG0tcmVndWxhcjtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IHZhci4kZGVza3RvcC1idXR0b247XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgIC5iYWNrZ3JvdW5kX3NpemUge1xuICAgICAgICBAaW5jbHVkZSBtaXhpbi5mbGV4KGNvbHVtbiwgZmxleC1zdGFydCwgY2VudGVyKTtcbiAgICAgICAgbWluLWhlaWdodDogOTV2aDtcbiAgICB9XG5cbiAgICAucHJvZmlsZV9oZXJvIHtcbiAgICAgICAgQGluY2x1ZGUgbWl4aW4uZmxleChjb2x1bW4sIGNlbnRlciwgZmxleC1zdGFydCk7XG4gICAgICAgIC8vIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBwYWRkaW5nLXRvcDogOTBweDtcblxuICAgICAgICAuZm9sbG93IHtcbiAgICAgICAgICAgIEBpbmNsdWRlIG1peGluLmZsZXgoY29sdW1uLCBjZW50ZXIsIGZsZXgtZW5kKTtcbiAgICAgICAgICAgIGdhcDogMjBweDtcbiAgICAgICAgICAgIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xuICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMjBweDtcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiB2YXIuJGRtLXJlZ3VsYXI7XG4gICAgICAgICAgICBwYWRkaW5nLXRvcDogMzBweDtcblxuICAgICAgICAgICAgYnV0dG9uIHtcbiAgICAgICAgICAgICAgICBhbGw6IHVuc2V0O1xuICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHZhci4kZ3JheVRleHQ7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDVweCAxMHB4O1xuICAgICAgICAgICAgICAgIGNvbG9yOiB2YXIuJGdyYXlEYXJrVGV4dDtcbiAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogLjNzIGVhc2U7XG5cbiAgICAgICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyLiRzZWNvbmRhcnlMaWdodDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHAge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogdmFyLiRkZXNrdG9wLWJvZHkzO1xuICAgICAgICAgICAgICAgIGNvbG9yOiB2YXIuJGdyYXlUZXh0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLnRpdGxlX3Byb2ZpbGUge1xuICAgICAgICAgICAgQGluY2x1ZGUgbWl4aW4uZmxleChjb2x1bW4sIGNlbnRlciwgZmxleC1zdGFydCk7XG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5kZXNjcmlwdGlvbiB7XG4gICAgICAgICAgICBAaW5jbHVkZSBtaXhpbi5mbGV4KCRqdXN0aWZ5OiBmbGV4LXN0YXJ0KTtcbiAgICAgICAgICAgIGdhcDogMTVweDtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDE1cHg7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgICAgICAgd2lkdGg6IDYwJTtcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiB2YXIuJGRtLXJlZ3VsYXI7XG5cbiAgICAgICAgICAgIGEge1xuICAgICAgICAgICAgICAgIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XG4gICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogLTIwcHg7XG4gICAgICAgICAgICAgICAgY29sb3I6IHZhci4kZ3JheURhcmtUZXh0O1xuICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIC51c2VyX2hhaWt1IHtcbiAgICAgICAgQGluY2x1ZGUgbWl4aW4uZmxleChjb2x1bW4sIGNlbnRlciwgY2VudGVyKTtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyLiRzZWNvbmRhcnlEYXJrO1xuICAgICAgICBtaW4td2lkdGg6IDg1MHB4O1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNTBweDtcblxuICAgICAgICAudGl0bGUge1xuICAgICAgICAgICAgQGluY2x1ZGUgbWl4aW4uZmxleCgkanVzdGlmeTogc3BhY2UtYmV0d2Vlbik7XG4gICAgICAgICAgICBmb250LWZhbWlseTogdmFyLiRkbS1yZWd1bGFyO1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcblxuICAgICAgICAgICAgaDIge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogdmFyLiRkZXNrdG9wLWgzO1xuICAgICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMTBweDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcCB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiB2YXIuJGRlc2t0b3AtYm9keTM7XG4gICAgICAgICAgICAgICAgY29sb3I6IHZhci4kZ3JheURhcmtUZXh0O1xuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAuaGFpa3Uge1xuICAgICAgICAgICAganVzdGlmeS1zZWxmOiBjZW50ZXI7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwcHg7XG4gICAgICAgIH1cblxuICAgICAgICAuaGFpa3U6bnRoLWNoaWxkKDMpIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgIHotaW5kZXg6IDE7XG5cbiAgICAgICAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgICAgICAgICAgaW5zZXQ6IDEwcHg7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogaW5oZXJpdDtcbiAgICAgICAgICAgICAgICB6LWluZGV4OiAyO1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEoMjQwLCAyMzgsIDIzMCwwKSAwJSwgcmdiYSgyNDAsIDIzOCwgMjMwLDAuNykgMTAwJSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAuaGFpa3U6bnRoLWNoaWxkKDQpIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgIHotaW5kZXg6IDE7XG5cbiAgICAgICAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgICAgICAgICAgaW5zZXQ6IDEwcHg7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogaW5oZXJpdDtcbiAgICAgICAgICAgICAgICB6LWluZGV4OiAyO1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEoMjQwLCAyMzgsIDIzMCwwLjUpIDAlLCByZ2JhKDI0MCwgMjM4LCAyMzAsMSkgMTAwJSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfVxuXG4gICAgICAgIC5jdGEge1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMzBweDtcblxuICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyLiRwcmltYXJ5O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSBcblxuICAgIC51c2VyX2xpa2VzIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNTBweDtcblxuICAgICAgICAudGl0bGUge1xuICAgICAgICAgICAgZm9udC1mYW1pbHk6IHZhci4kZG0tcmVndWxhcjtcblxuICAgICAgICAgICAgaDIge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogdmFyLiRkZXNrdG9wLWgzO1xuICAgICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMTBweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn0iLCJAdXNlIFwiLi4vYWJzdHJhY3QvbWl4aW5cIjtcbkB1c2UgXCIuLi9hYnN0cmFjdC9mb250XCI7XG5AdXNlIFwiLi4vYWJzdHJhY3QvdmFyaWFibGVzXCIgYXMgdmFyO1xuXG4ubm90aWZpY2F0aW9ucyB7XG4gICAgQGluY2x1ZGUgbWl4aW4uZmxleChjb2x1bW4sIGNlbnRlciwgY2VudGVyKTtcbiAgICBcbiAgICAubm90aWZpY2F0aW9uX2NhcmQge1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCB2YXIuJGdyYXlEYXJrVGV4dDtcbiAgICB9XG59IiwiXG5AdXNlIFwiLi4vYWJzdHJhY3QvbWl4aW5cIjtcbkB1c2UgXCIuLi9hYnN0cmFjdC9mb250XCI7XG5AdXNlIFwiLi4vYWJzdHJhY3QvdmFyaWFibGVzXCIgYXMgdmFyO1xuXG4uZmVlZCB7XG4gICAgQGluY2x1ZGUgbWl4aW4uZmxleCgkYWxpZ246IGZsZXgtc3RhcnQpO1xuICAgIG1pbi1oZWlnaHQ6IDkwdmg7XG5cbiAgICAuYmFja2dyb3VuZF9zaXplIHtcbiAgICAgICAgQGluY2x1ZGUgbWl4aW4uZmxleChjb2x1bW4sIGNlbnRlciwgY2VudGVyKTtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAxMCU7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDEwJTtcbiAgICB9XG5cbiAgICAuZmVlZF90aXRsZSB7XG4gICAgICAgIEBpbmNsdWRlIG1peGluLmZsZXgoY29sdW1uLCBjZW50ZXIsIGZsZXgtc3RhcnQpO1xuICAgICAgICBhbGlnbi1zZWxmOiBmbGV4LXN0YXJ0O1xuICAgICAgICBtYXJnaW4tdG9wOiAxMGVtO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiA2MHB4O1xuICAgIH1cbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=*/